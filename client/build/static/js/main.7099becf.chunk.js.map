{"version":3,"sources":["DatabaseModule.js","registration-page/RegistrationModule.js","home-page/HomeModule.js","profile-page/ProfileModule.js","groups-page/GroupsModule.js","invitations-page/InvitationModule.js","analytics-page/AnalyticsModule.js","flagged-posts/FlaggedPostsModule.js","login-page/LoginForm.js","registration-page/RegistrationForm.js","login-page/ChangePasswordForm.js","login-page/LoginPage.js","home-page/Home.js","profile-page/ProfilePage.js","groups-page/Groups.js","notifications-page/NotificationModule.js","notifications-page/NotificationPage.js","profile-page/UpdatePassword.js","UploadModule.js","view-group-page/ViewGroupModule.js","view-group-page/ViewGroup.js","invitations-page/InvitationPage.js","profile-page/deactivate-account-page/DeactivateModule.js","profile-page/deactivate-account-page/DeactivateAccountPage.js","messages-page/MessagesModule.js","messages-page/Messages.js","conversation-page/ConversationModule.js","conversation-page/Conversation.js","analytics-page/AnalyticsPage.js","flagged-posts/FlaggedPosts.js","MainPage.js","reportWebVitals.js","index.js","login-page/LoginModule.js"],"names":["sendPostRequest","url","body","a","fetch","method","mode","headers","JSON","stringify","then","response","json","result","res","console","log","sendUploadPostRequest","sendPutRequest","sendGetRequest","params","fullURL","id","sendDeleteRequest","sendBodiedDeleteRequest","sendGetGroupsRequest","createHash","require","database","validatePassword","changeState","password1","password2","link","createAccount","username","newUser","user_name","user_password","update","digest","undefined","err","changeSelectedFilter","updateSelected","document","getElementById","value","changeSelectedSort","resetSelectedSort","resetSelected","getFilterOptions","setFilters","topics","parseFilters","filters","output","i","length","getFilteredGroups","filter","sort","groups","parseFilteredGroups","selected","element","firstChild","removeChild","group","groupId","group_id","groupName","group_name","groupDescription","group_description","isPublic","is_public","topicsLst","forEach","topic","groupBlock","div","createElement","innerHTML","onclick","viewingGroup","appendChild","getPostsComments","posts","commentPromiseContainer","postComments","post_id","push","Promise","all","commentFulfilledContainer","postsArray","comments","getProfile","userId","profile","getNamesFromDB","postsToSet","userIdsToRetrieve","j","indexOf","user_id","profilePromiseContainer","commenterProfile","profileFulfilledContainer","profilesToReturn","postsToReturn","idToFind","index","map","firstName","first_name","lastName","last_name","name","getUserPosts","userPosts","postsArrayWithNames","sendReply","postId","commentTxt","updateUserPosts","replyBody","comment_txt","callPostReply","getRegistrationDate","userLst","registrationDate","registration_date","slice","createGroup","groupCreator","topic1","topic2","topic3","newGroup","group_creator","topic_1","topic_2","topic_3","getGroups","getGroupMemberships","getAdmins","parseGroups","admins","groupMemberships","groupMembershipsSimplifiedArray","filteredGroups","includes","adminLst","admin","requestJoinGroup","updateMessage","groupMembers","groupInvitations","groupAdmins","member_id","to_user_id","admin_id","newRequestObj","fromUserId","toUserId","invitationStatus","getNonMemberPublicGroups","publicGroupsUserNotIn","nonMemberPublicGroups","getRandomNum","num","Math","floor","random","suggestGroup","potentialSuggestions","numPotentialSuggestions","choice","suggestedGroup","getInvitationsToReview","invitationsToReview","getPendingInvitations","getGroupNames","invitations","groupNamePromises","groupNameArray","invitationsLocal","putDecline","invitationId","newStatus","declineInvite","invitationName","updateInvitations","acceptHTTP","invitationURL","invitationBody","resultInv","acceptInvite","invitation","invitation_id","approveInvite","invReview","updateInvitationsToReview","groupMembershipURL","postBody","approveNotifURL","approvedNotifBody","notification","isRead","msg","notApproveInvite","getGroupAnalyticsFacts","groupAnalyticsFacts","getPostAnalyticsFacts","postAnalyticsFacts","getFlaggedPostsForReview","state","flaggedPosts","finishFlag","flag","deleted","flaggerId","flaggerName","author","posting_username","parseFlaggedPosts","flagged","post","postingUser","caption","content","photourl","audioUrl","videoUrl","postBlock","postDiv","lib","LoginForm","props","addAttempt","attempt","message","className","window","location","href","split","pop","htmlFor","type","placeholder","to","onClick","verifyUser","RegistrationForm","ChangePasswordForm","changePassword","LoginPage","useState","input","Home","selectedFilter","updateSelectedFilter","selectedSort","updateSelectedSort","useEffect","onKeyDown","role","tabIndex","ProfilePage","biography","profile_picture_url","userProfile","setUserProfile","setUserPosts","setRegoDate","profileToSet","regoDate","src","alt","comment","Groups","setMessage","setAllGroups","nonMemberGroups","setNonMemberGroups","setSuggestedGroup","updateGroups","groups2","nonMemberGroupsResolved","newSuggestedGroup","newMessage","getNotifications","NotificationPage","notifs","setNotifs","updateNotifs","n","Date","parse","date","getMonth","getDate","getFullYear","getHours","getMinutes","is_read","pass1","pass2","userPassword","reqBody","changeBio","newBio","changeProfilePic","picUrl","profilePictureURL","apiUrl","showMessage","UpdatePassword","mutateMessage","Axios","getGroup","revokeAdmin","groupAndAdmins","setGroupAndAdmins","addAdmin","adminUser","isCreator","inviteNonAdmin","toUserName","leaveGroup","uploadMediaPost","postGroup","updateState","postingUsername","file","files","size","data","FormData","append","mediaUrl","newPost","post_group","posting_user","createPost","getPosts","flagPost","hidePost","deletePost","adminNames","user","userName","alert","notifBody","flagReply","replyId","hideReply","deleteReply","editReply","setEditComment","createReply","newReply","getReplies","parsePosts","parseReplies","replies","editComment","reply","reply_id","replyUser","replyBlock","replyDiv","parseOnclicks","replyButton","flagPostButton","hidePostButton","deletePostButton","flagReplyButton","hideReplyButton","deleteReplyButton","editReplyButton","ViewGroup","allPosts","setAllPosts","updatePosts","createPostObject","setAllReplies","updateReplies","updates","toShow","is_creator","processAdmins","multiple","accept","InvitationPage","pendingInvitations","setPendingInvitations","setInvitationsToReview","updatePendingInvitations","fetchedInvitationsToReview","inv","deleteOpenInvitations","urlStem","deleteGroupMemberships","deleteAdminRoles","deleteProfileInfo","deleteUserInfo","deactivateAccount","DeactivateAccountPage","getConvos","convoInfo","otherId","otherName","user1","user2","user2Name","user1Name","parseConvos","convos","convoBlock","viewingConvo","convoId","otherUserId","uploadMediaConvo","updateMessages","resp","toId","fromId","senderName","receiverName","img","video","audio","startConvo","txt","Messages","updateMsgs","getMessages","parseMessages","msgs","isDeliveredDateFormat","isDelivered","isReadDateFormat","sendMessage","updateConvo","Conversation","scrollTop","scrollHeight","updateFacts","setGroupFacts","setPostFacts","newGroupFacts","newPostFacts","AnalyticsPage","groupFacts","postFacts","fact","FlaggedPosts","MainPage","history","pushState","oldState","last","first","conditionallyRender","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","password"],"mappings":"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","file":"static/js/main.7099becf.chunk.js","sourcesContent":["const sendPostRequest = async function sendPostRequest(url, body) {\r\n  try {\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => result);\r\n    return res;\r\n  } catch (err) {\r\n    // eslint-disable-next-line\r\n    console.log('ERROR');\r\n    return null;\r\n  }\r\n};\r\n\r\nconst sendUploadPostRequest = async function sendUploadPostRequest(url, body) {\r\n  try {\r\n    const res = await fetch(url, {\r\n      method: 'POST',\r\n      mode: 'no-cors',\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n      body,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => result);\r\n\r\n    return res;\r\n  } catch (err) {\r\n    // eslint-disable-next-line\r\n    console.log(err);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst sendPutRequest = async function sendPutRequest(url, body) {\r\n  try {\r\n    const res = await fetch(url, {\r\n      method: 'PUT',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => result);\r\n\r\n    return res;\r\n  } catch (err) {\r\n    // eslint-disable-next-line\r\n    console.log('ERROR');\r\n    return null;\r\n  }\r\n};\r\n\r\nconst sendGetRequest = async function sendGetRequest(url, params) {\r\n  try {\r\n    const fullURL = url + (typeof params !== 'undefined' ? JSON.stringify(params.id) : '');\r\n    const res = await fetch(fullURL, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      // body: JSON.stringify(body),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => result);\r\n    return res;\r\n  } catch (err) {\r\n    // eslint-disable-next-line\r\n    console.log('ERROR getting resource - from db module');\r\n    // eslint-disable-next-line\r\n    console.log(err);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst sendDeleteRequest = async function sendDeleteRequest(url) {\r\n  try {\r\n    const res = await fetch(url, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => result);\r\n    return res;\r\n  } catch (err) {\r\n    // eslint-disable-next-line\r\n    console.log('ERROR deleting request');\r\n    // eslint-disable-next-line\r\n    console.log(err);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst sendBodiedDeleteRequest = async function sendBodiedDeleteRequest(url, body) {\r\n  try {\r\n    const res = await fetch(url, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => result);\r\n    return res;\r\n  } catch (err) {\r\n    // eslint-disable-next-line\r\n    console.log('ERROR');\r\n    return null;\r\n  }\r\n};\r\n\r\nconst sendGetGroupsRequest = async function sendGetGroupsRequest(url) {\r\n  try {\r\n    const res = await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((result) => result);\r\n    return res;\r\n  } catch (err) {\r\n    // eslint-disable-next-line\r\n    console.log('ERROR');\r\n    return null;\r\n  }\r\n};\r\n\r\nexport {\r\n  sendPostRequest,\r\n  sendGetRequest,\r\n  sendPutRequest,\r\n  sendGetGroupsRequest,\r\n  sendDeleteRequest,\r\n  sendBodiedDeleteRequest,\r\n  sendUploadPostRequest,\r\n};\r\n","const { createHash } = require('crypto');\nconst database = require('../DatabaseModule');\n\nconst validatePassword = (changeState, password1, password2, link) => {\n  if (password1 !== password2) {\n    changeState({ link });\n    return false;\n  }\n  return true;\n};\n\nconst createAccount = async (changeState, username, password1, password2) => {\n  if (validatePassword(changeState, password1, password2, '/registration/invalid')) {\n    // username is not taken, we can create the account and empty profile!\n    const newUser = {\n      user_name: username,\n      user_password: createHash('sha256').update(password1).digest('hex'),\n    };\n    const response = await database.sendPostRequest('/registration', newUser);\n    if (response.err === undefined) {\n      changeState({ link: '/' });\n    } else {\n      changeState({ link: '/registration/user' });\n    }\n  }\n};\n\nexport {\n  validatePassword,\n  createAccount,\n};\n","const database = require('../DatabaseModule');\n\nconst changeSelectedFilter = (updateSelected) => {\n  updateSelected(document.getElementById('topics').value);\n};\n\nconst changeSelectedSort = (updateSelected) => {\n  updateSelected(document.getElementById('sorts').value);\n};\n\nconst resetSelectedSort = (updateSelected) => {\n  updateSelected('none');\n};\n\nconst resetSelected = (updateSelected) => {\n  updateSelected('');\n};\n\nconst getFilterOptions = async (setFilters) => {\n  const topics = await database.sendGetRequest('/topics');\n  setFilters(topics.topics);\n};\n\nconst parseFilters = (filters) => {\n  let output = '';\n  for (let i = 0; i < filters.length; i += 1) {\n    output += `<option value=${filters[i]} name=${filters[i]}>${filters[i]}</option>`;\n  }\n  return output;\n};\n\nconst getFilteredGroups = async (filter, sort) => {\n  let groups = {};\n  if (filter === '') {\n    groups = await database.sendGetRequest(`/topics/all/${sort}`);\n  } else {\n    groups = await database.sendGetRequest(`/topics/${filter}/none`);\n  }\n  return groups.groups;\n};\n\nconst parseFilteredGroups = (groups, changeState, selected) => {\n  // remove all children in the box\n  const element = document.getElementById('groups-area');\n\n  if (element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  // then add all the groups\n  for (let i = 0; i < groups[0].length; i += 1) {\n    const group = groups[0][i];\n    const groupId = group.group_id;\n    const groupName = group.group_name;\n    const groupDescription = group.group_description;\n    const isPublic = (group.is_public === 1) ? 'Public' : 'Private';\n\n    let topicsLst = '';\n    if (group.topics) {\n      const list = group.topics;\n      list.forEach((topic) => {\n        topicsLst += (topicsLst === '' ? `${topic}` : `, ${topic}`);\n      });\n    } else {\n      topicsLst = selected;\n    }\n\n    // eslint-disable-next-line prefer-template\n    const groupBlock = '<div class=\"group-container\">'\n    + '<div class=\"group-info\">'\n    + '<ul>'\n    + '<li id=\"group-id\">Group Id: '\n    + groupId\n    + '</li>'\n    + '<li id=\"group-name\">Group Name: '\n    + groupName\n    + ' </li>'\n    + '<li id=\"group-description\">Group Description: '\n    + groupDescription\n    + '</li>'\n    + '<li id=\"topics\">Topics: '\n    + topicsLst\n    + '</li>'\n    + '<li id=\"is-public\">'\n    + isPublic\n    + '</li>'\n    + '</ul>'\n    + '</div>'\n    + '<button class=\"join-button\"> View Group </button>'\n    + '</div>';\n\n    const div = document.createElement('div');\n    div.innerHTML = groupBlock;\n    div.onclick = () => {\n      changeState({ link: '/viewgroup', viewingGroup: groupId });\n    };\n\n    document.getElementById('groups-area').appendChild(div);\n  }\n};\n\nexport {\n  changeSelectedFilter,\n  resetSelectedSort,\n  changeSelectedSort,\n  resetSelected,\n  parseFilters,\n  getFilterOptions,\n  getFilteredGroups,\n  parseFilteredGroups,\n};\n","const database = require('../DatabaseModule');\n\n// get comments for a post\nconst getPostsComments = async (posts) => {\n  // iterate through each post, requesting its comments. Wait for all promises to resolve.\n  const commentPromiseContainer = [];\n  for (let i = 0; i < posts.length; i += 1) {\n    // need to implement a get comments function first\n    const postComments = database.sendGetRequest('/comment/', { id: posts[i].post_id });\n    commentPromiseContainer.push(postComments);\n  }\n  const commentFulfilledContainer = await Promise.all(commentPromiseContainer);\n\n  // assign the comments to each post in the array to hand back\n  const postsArray = posts;\n  for (let i = 0; i < commentFulfilledContainer.length; i += 1) {\n    postsArray[i].comments = commentFulfilledContainer[i];\n  }\n  // return the array of posts which now each have the additional 'comments' property\n  // comments property is itself an array of comment objects\n  return postsArray;\n};\n\nconst getProfile = async (userId) => {\n  const profile = await database.sendGetRequest('/profile/', { id: userId });\n  return profile;\n};\n\nconst getNamesFromDB = async (postsToSet) => {\n  // set up array of unique userIds for which to retrieve names from Db\n  const userIdsToRetrieve = [];\n\n  // loop through and get the userIds of the comment-makers\n  for (let i = 0; i < postsToSet.length; i += 1) {\n    // console.log('in get outerloop names, postsToSet[i].comments are: ', postsToSet[i].comments);\n    for (let j = 0; j < postsToSet[i].comments.length; j += 1) {\n      if (userIdsToRetrieve.indexOf(postsToSet[i].comments[j].user_id) === -1) {\n        userIdsToRetrieve.push(postsToSet[i].comments[j].user_id);\n        // console.log('pushing ', postsToSet[i].comments[j].user_id, 'to userIdsToRetrieve');\n      }\n    }\n  }\n\n  // get the names associated with all the userIds needed on the page\n  // console.log('about to go populate promise container with ', userIdsToRetrieve);\n  const profilePromiseContainer = [];\n  for (let i = 0; i < userIdsToRetrieve.length; i += 1) {\n    const commenterProfile = getProfile(userIdsToRetrieve[i]);\n    // console.log(' about to push ', commenterProfile, ' onto the profilePromiseContainer');\n    profilePromiseContainer.push(commenterProfile);\n  }\n\n  const profileFulfilledContainer = await Promise.all(profilePromiseContainer);\n\n  // taking one level off the array - not sure why it's got an extra nesting?\n  const profilesToReturn = [];\n  for (let i = 0; i < profileFulfilledContainer.length; i += 1) {\n    profilesToReturn.push(profileFulfilledContainer[i][0][0]);\n  }\n\n  // attach the names to each comment\n  const postsToReturn = postsToSet;\n  for (let i = 0; i < postsToReturn.length; i += 1) {\n    for (let j = 0; j < postsToReturn[i].comments.length; j += 1) {\n      // const index = profilesToReturn.userId.indexOf(postsToReturn[i][j].user_id);\n      const idToFind = postsToReturn[i].comments[j].user_id;\n      const index = profilesToReturn.map((profile) => (profile.user_id)).indexOf(idToFind);\n      const firstName = profilesToReturn[index].first_name;\n      const lastName = profilesToReturn[index].last_name;\n      postsToReturn[i].comments[j].name = `${firstName} ${lastName}`;\n      // console.log('just assigned sally at postsToReturn[i].comments[j] of\n      // ', postsToReturn[i].comments[j]);\n    }\n  }\n\n  return postsToReturn;\n};\n\n// get posts to display and their associated comments\nconst getUserPosts = async (userId) => {\n  // get posts\n  const userPosts = await database.sendGetRequest('/post/', { id: userId });\n\n  // get comments\n  const postsArray = await getPostsComments(userPosts);\n\n  // get / attach the names to each comment\n  const postsArrayWithNames = await getNamesFromDB(postsArray);\n\n  return postsArrayWithNames;\n};\n\nconst sendReply = async (postId, userId, commentTxt, updateUserPosts) => {\n  const replyBody = {\n    post_id: postId,\n    user_id: userId,\n    comment_txt: document.getElementById(`post_${postId}`).value,\n  };\n\n  const callPostReply = await database.sendPostRequest('/comment/', replyBody);\n\n  updateUserPosts();\n  return callPostReply;\n\n  // this structure in a Javascript Object: post_id: req.body.post_id,\n  //    user_id: req.body.user_id,\n  //    comment_txt: req.body.comment_txt,\n  // (8, 6, 9, \"That's THEFT!\")\n};\n\nconst getRegistrationDate = async (userId) => {\n  // eslint-disable-next-line no-console\n  console.log('at ProfileModule/getRegistrationDate with userId', userId);\n  const userLst = await database.sendGetRequest('/user/', { id: userId });\n  // eslint-disable-next-line no-console\n  console.log('back from sendGetRequest, with userLst of:', userLst);\n  const registrationDate = userLst[0].registration_date.slice(0, 10);\n  return registrationDate;\n};\n\nexport {\n  getUserPosts,\n  getProfile,\n  sendReply,\n  getRegistrationDate,\n  getPostsComments,\n  getNamesFromDB,\n};\n","const database = require('../DatabaseModule');\r\n\r\nconst createGroup = async (\r\n  changeState,\r\n  groupName,\r\n  groupCreator,\r\n  groupDescription,\r\n  isPublic,\r\n  topic1,\r\n  topic2,\r\n  topic3,\r\n) => {\r\n  const newGroup = {\r\n    group_name: groupName,\r\n    group_creator: groupCreator,\r\n    group_description: groupDescription,\r\n    is_public: isPublic,\r\n    topic_1: topic1,\r\n    topic_2: topic2,\r\n    topic_3: topic3,\r\n  };\r\n\r\n  const response = await database.sendPostRequest('/groups', newGroup);\r\n  if (response.err === undefined) {\r\n    changeState({ link: '/groups' });\r\n  } else {\r\n    changeState({ link: '/error' });\r\n  }\r\n};\r\n\r\nconst getGroups = async (changeState) => {\r\n  const response = await database.sendGetGroupsRequest('/groups');\r\n  if (response.err === undefined) {\r\n    changeState({ link: '/groups' });\r\n  } else {\r\n    changeState({ link: '/error' });\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nconst getGroupMemberships = async (userId) => {\r\n  const response = await database.sendGetRequest(`/membership-of-user/${userId}`);\r\n  return response;\r\n};\r\n\r\nconst getAdmins = async () => {\r\n  const response = await database.sendGetRequest('/admins');\r\n\r\n  return response;\r\n};\r\n\r\nconst parseGroups = (changeState, groups, admins, groupMemberships) => {\r\n  // remove all children in the box\r\n  const element = document.getElementById('groups-area');\r\n\r\n  if (element) {\r\n    while (element.firstChild) {\r\n      element.removeChild(element.firstChild);\r\n    }\r\n  }\r\n\r\n  const groupMembershipsSimplifiedArray = [];\r\n  for (let i = 0; i < groupMemberships.length; i += 1) {\r\n    groupMembershipsSimplifiedArray.push(groupMemberships[i].group_id);\r\n  }\r\n\r\n  // filter groups to only be those in which the user is a member\r\n  const filteredGroups = [];\r\n  for (let i = 0; i < groups.length; i += 1) {\r\n    const groupId = groups[i].group_id;\r\n    if (groupMembershipsSimplifiedArray.includes(groupId)) {\r\n      filteredGroups.push(groups[i]);\r\n    }\r\n  }\r\n\r\n  // then add all the groups\r\n  for (let i = 0; i < filteredGroups.length; i += 1) {\r\n    const group = filteredGroups[i];\r\n\r\n    let adminLst = '';\r\n    const list = admins[group.group_id];\r\n    list.forEach((admin) => {\r\n      adminLst += (adminLst === '' ? `${admin}` : `, ${admin}`);\r\n    });\r\n\r\n    const groupId = group.group_id;\r\n    const groupName = group.group_name;\r\n    const groupDescription = group.group_description;\r\n    const isPublic = (group.is_public === 1) ? 'Public' : 'Private';\r\n\r\n    // eslint-disable-next-line prefer-template\r\n    const groupBlock = '<div class=\"group-container\">'\r\n    + '<div class=\"group-info\">'\r\n    + '<ul>'\r\n    + '<li id=\"group-id\">Group Id: '\r\n    + groupId\r\n    + '</li>'\r\n    + '<li id=\"group-name\">Group Name: '\r\n    + groupName\r\n    + ' </li>'\r\n    + '<li id=\"group-description\">Group Description: '\r\n    + groupDescription\r\n    + '</li>'\r\n    + '<li id=\"group-admins\">Admins: '\r\n    + adminLst\r\n    + '</li>'\r\n    + '<li id=\"is-public\">'\r\n    + isPublic\r\n    + '</li>'\r\n    + '</ul>'\r\n    + '</div>'\r\n    + '<button class=\"join-button\"> View Group </button>'\r\n    + '</div>';\r\n\r\n    const div = document.createElement('div');\r\n    div.innerHTML = groupBlock;\r\n    div.onclick = () => {\r\n      changeState({ link: '/viewgroup', viewingGroup: groupId });\r\n    };\r\n\r\n    document.getElementById('groups-area').appendChild(div);\r\n  }\r\n};\r\n\r\n// request to join the group - note uses the invitations workflow,\r\n// treating a request as an accepted (but not yet approved) invitation\r\nconst requestJoinGroup = async (userId, groupId, updateMessage) => {\r\n  const groupMembers = await database.sendGetRequest(`/membership/${groupId}`);\r\n  const groupInvitations = await database.sendGetRequest(`/invitations-open/${groupId}`);\r\n  const groupAdmins = await database.sendGetRequest(`/admins/${groupId}`);\r\n\r\n  // check if in group already\r\n  for (let i = 0; i < groupMembers.length; i += 1) {\r\n    if (groupMembers[i].member_id === userId) {\r\n      updateMessage('You\\'re already a member of this group!');\r\n      return;\r\n    }\r\n  }\r\n\r\n  // check if already have an open invite\r\n  for (let i = 0; i < groupInvitations.length; i += 1) {\r\n    if (groupInvitations[i].to_user_id === userId) {\r\n      updateMessage('You\\'ve already got an open request or invitation to this group!');\r\n      return;\r\n    }\r\n  }\r\n\r\n  // check if already an admin\r\n  for (let i = 0; i < groupAdmins.length; i += 1) {\r\n    if (groupAdmins[i].admin_id === userId) {\r\n      updateMessage('You\\'re already an admin of this group!');\r\n      return;\r\n    }\r\n  }\r\n\r\n  const newRequestObj = {\r\n    fromUserId: 1000000,\r\n    toUserId: userId,\r\n    groupId,\r\n    invitationStatus: 'accepted',\r\n  };\r\n\r\n  updateMessage('Successfully requested to join - await approval!');\r\n  await database.sendPostRequest('/invitations/', newRequestObj);\r\n};\r\n\r\nconst getNonMemberPublicGroups = async (groupMemberships, groups) => {\r\n  // simplify groupMembershipsArray to be just ids\r\n  const groupMembershipsSimplifiedArray = [];\r\n  for (let i = 0; i < groupMemberships.length; i += 1) {\r\n    groupMembershipsSimplifiedArray.push(groupMemberships[i].group_id);\r\n  }\r\n\r\n  // filter groups data, taking only groups that (a) the user is NOT in and (b) that are public\r\n  const publicGroupsUserNotIn = [];\r\n  for (let i = 0; i < groups.length; i += 1) {\r\n    if (!(groupMembershipsSimplifiedArray.includes(groups[i].group_id))) {\r\n      if (groups[i].is_public === 1) {\r\n        publicGroupsUserNotIn.push(groups[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // return Array\r\n  return publicGroupsUserNotIn;\r\n};\r\n\r\nconst nonMemberPublicGroups = async (groupMemberships, groups) => {\r\n  // delete any existing children in the inner html\r\n  const element = document.getElementById('groups-area-non-member');\r\n  if (element) {\r\n    while (element.firstChild) {\r\n      element.removeChild(element.firstChild);\r\n    }\r\n  }\r\n\r\n  // get nonmember public groups\r\n  const publicGroupsUserNotIn = getNonMemberPublicGroups(groupMemberships, groups);\r\n  return publicGroupsUserNotIn;\r\n};\r\n\r\n// abstracting a level from the math module b/c I think you can't mock the math module directly?\r\nconst getRandomNum = (num) => {\r\n  const ranNum = Math.floor((Math.random() * num));\r\n  return ranNum;\r\n};\r\n\r\n// returns a random public group the user is not yet a member of.\r\n// Note - returns an ARRAY, not a single group object\r\nconst suggestGroup = async (groupMemberships, groups) => {\r\n  const potentialSuggestions = await getNonMemberPublicGroups(groupMemberships, groups);\r\n  const numPotentialSuggestions = potentialSuggestions.length;\r\n  const choice = getRandomNum(numPotentialSuggestions);\r\n  const suggestedGroup = potentialSuggestions[choice];\r\n\r\n  return [suggestedGroup];\r\n};\r\n\r\nexport {\r\n  createGroup,\r\n  getGroups,\r\n  parseGroups,\r\n  getAdmins,\r\n  getGroupMemberships,\r\n  nonMemberPublicGroups,\r\n  requestJoinGroup,\r\n  getRandomNum,\r\n  suggestGroup,\r\n};\r\n","const database = require('../DatabaseModule');\n\n// get list of accepted invitations to review\nconst getInvitationsToReview = async (userId) => {\n  // call backend for list of invitations to review based on the userId\n  const invitationsToReview = await database.sendGetRequest(`/invitations-review/${userId}`);\n  return invitationsToReview;\n};\n\n// add to group members\n\nconst getPendingInvitations = async (id) => {\n  const response = await database.sendGetRequest('/invitations/', { id });\n  return response;\n};\n\n// get group names associated with group_id\nconst getGroupNames = async (invitations) => {\n  // build array of promises for each invitation\n  const groupNamePromises = [];\n  for (let i = 0; i < invitations.length; i += 1) {\n    const groupName = database.sendGetRequest('/groups/', { id: invitations[i].group_id });\n    groupNamePromises.push(groupName);\n\n    // if there is an error for any of them, return it\n    if (groupName.err !== undefined) {\n      // eslint-disable-next-line no-console\n      console.log(groupName.err);\n      return groupName;\n    }\n  }\n\n  // await for all promises to resolve\n  const groupNameArray = await Promise.all(groupNamePromises);\n\n  const invitationsLocal = invitations;\n  // loop through, adding group names to each invitation object\n  for (let j = 0; j < groupNameArray.length; j += 1) {\n    invitationsLocal[j].groupName = groupNameArray[j].group_name;\n  }\n\n  return invitationsLocal;\n};\n\nconst putDecline = async (invitationId) => {\n  const result = await database.sendPutRequest(`/invitations/${invitationId}`, { newStatus: 'declined' });\n  return result;\n};\n\nconst declineInvite = async (invitationId, invitationName, updateInvitations, updateMessage) => {\n  // update operation on invitation to set the status to declined\n  const result = await putDecline(invitationId);\n\n  // update message\n  updateMessage(`Declined invitation to  ${invitationName}`);\n\n  // refetch/update invitations\n  updateInvitations();\n  return result;\n};\n\nconst acceptHTTP = async (invitationId) => {\n  // updating group in db taken from here. groupId, userId taken from params\n\n  // update invitation in db\n  const invitationURL = `/invitations/${invitationId}`;\n  const invitationBody = { newStatus: 'accepted' };\n  const resultInv = await database.sendPutRequest(invitationURL, invitationBody);\n\n  // refetch/update invitations\n  return resultInv;\n};\n\nconst acceptInvite = async (invitation, updateInvitations, updateMessage) => {\n  // update operation on invitation to set the status to declined\n  const result = await acceptHTTP(invitation.invitation_id);\n\n  // update message\n  updateMessage(`Accepted invitation to  ${invitation.groupName}. An admin will now review your invitation!`);\n\n  // refetch/update invitations\n  updateInvitations();\n\n  return result;\n};\n\n// for when admins approve an invitation that has already been accepted by the invitee\nconst approveInvite = async (invReview, updateInvitationsToReview, updateMessage) => {\n  // get all members in a group\n  const groupMembers = await database.sendGetRequest(`/membership/${invReview.group_id}`);\n\n  // test if user is already in the group\n  for (let i = 0; i < groupMembers.length; i += 1) {\n    if (groupMembers[i].member_id === invReview.to_user_id) {\n      updateMessage('This user is already in the group! You can safely decline the invitation');\n      return;\n    }\n  }\n\n  // add to group membership (already done)\n  const groupMembershipURL = `/membership/${invReview.group_id}`;\n  const postBody = { id: invReview.to_user_id };\n  await database.sendPostRequest(groupMembershipURL, postBody);\n\n  // update invitation status to approved\n  const invitationURL = `/invitations/${invReview.invitation_id}`;\n  const invitationBody = { newStatus: 'approved' };\n  await database.sendPutRequest(invitationURL, invitationBody);\n\n  // send notification to user\n  const approveNotifURL = `/notifications/${invReview.to_user_id}`;\n  const approvedNotifBody = { notification: { isRead: false, msg: `You've been approved to join ${invReview.group_name}!` } };\n  await database.sendPostRequest(approveNotifURL, approvedNotifBody);\n\n  // updateMessage\n  updateMessage('You\\'ve approved the user - and they\\'ve been added to the group! Hurrah!');\n\n  // refresh invitation page (invitations to review component)\n  updateInvitationsToReview();\n};\n\n// for when admins decline/don't approve an invitation that has already been accepted by an invitee\nconst notApproveInvite = async (invReview, updateInvitationsToReview, updateMessage) => {\n  // update invitation status to declined\n  const invitationURL = `/invitations/${invReview.invitation_id}`;\n  const invitationBody = { newStatus: 'declined' };\n  const resultInv = await database.sendPutRequest(invitationURL, invitationBody);\n\n  // send notification to user\n\n  // updateMessage\n  updateMessage('You\\'ve declined the user - and they\\'ve NOT been added to the group! Hurrah!');\n\n  // refresh invitation page (invitations to review component)\n  updateInvitationsToReview();\n\n  return resultInv;\n};\n\nexport {\n  getPendingInvitations,\n  getGroupNames,\n  declineInvite,\n  acceptInvite,\n  getInvitationsToReview,\n  approveInvite,\n  notApproveInvite,\n};\n","const database = require('../DatabaseModule');\n\nconst getGroupAnalyticsFacts = async () => {\n  const groupAnalyticsFacts = await database.sendGetRequest('/analytics-groups');\n  return groupAnalyticsFacts;\n};\n\nconst getPostAnalyticsFacts = async () => {\n  const postAnalyticsFacts = await database.sendGetRequest('/analytics-posts');\n  return postAnalyticsFacts;\n};\n\nexport {\n  getGroupAnalyticsFacts,\n  getPostAnalyticsFacts,\n};\n","const database = require('../DatabaseModule');\n\nconst getFlaggedPostsForReview = async (state) => {\n  const { flaggedPosts } = await database.sendGetRequest(`/flag-post/${state.userId}`);\n  return flaggedPosts;\n};\n\nconst finishFlag = async (flag, deleted, changeState) => {\n  const body = {\n    flaggerId: flag.flaggerName,\n    flaggerName: flag.flaggerName,\n    groupId: flag.groupId,\n    deleted,\n    author: flag.posting_username,\n  };\n  await database.sendBodiedDeleteRequest(`/flag-post/${flag.post_id}`, body);\n  changeState({ link: '/flaggedposts' });\n  return body;\n};\n\nconst parseFlaggedPosts = (flagged, changeState) => {\n  if (flagged.length !== 0) {\n    const element = document.getElementById('post-create-area');\n\n    if (element) {\n      while (element.firstChild) {\n        element.removeChild(element.firstChild);\n      }\n    }\n\n    // then add all the groups\n    for (let i = 0; i < flagged.length; i += 1) {\n      const post = flagged[i];\n      const postId = post.post_id;\n      const postingUser = post.posting_username;\n      // eslint-disable-next-line prefer-destructuring\n      const caption = post.caption;\n      let content = '';\n      if (flagged[i].photourl !== null) {\n        content += `<div class=\"content image\">\n          <img src=${flagged[i].photourl} class=\"image\" alt=\"${flagged[i].posting_username}'s image\" />\n        </div>`;\n      } else if (flagged[i].audioUrl !== null) {\n        content += `<div class=\"content audio\">\n          <audio controls>\n            <source src=${flagged[i].audioUrl}>\n          </audio>\n        </div>`;\n      } else if (flagged[i].videoUrl !== null) {\n        content += `<div class=\"content video\">\n          <video src=${flagged[i].videoUrl} controls>\n            Something went wrong!\n          </video>\n        </div>`;\n      }\n\n      // eslint-disable-next-line prefer-template\n      const postBlock = '<div id=\"flag-container\">'\n    + `<p>Flagged by: ${flagged[i].flaggerName}</p>`\n    + `<p>In group: ${flagged[i].groupName}</p>`\n    + `<div class=\"post-container\" id=${postId}>`\n    + '<div class=\"post-info\">'\n    + '<ul>'\n    + '<li id=\"post-id\" >Post Id: '\n    + postId\n    + '</li>'\n    + '<li id=\"posting-user\">Posting User: '\n    + postingUser\n    + '</li>'\n    + '<li id=\"caption\">Caption: '\n    + caption\n    + '</li>'\n    + '<li id=\"content\">'\n    + content\n    + '</li>'\n    + '</ul>'\n    + '</div>'\n    + '</div>'\n    + '<div>'\n    + '<input id=\"delete\" type=\"submit\" value=\"Delete post\" />'\n    + '<input id=\"keep\" type=\"submit\" value=\"Keep post\" />'\n    + '</div>'\n    + '</div>';\n\n      const postDiv = document.createElement('div');\n      postDiv.innerHTML = postBlock;\n\n      document.getElementById('post-create-area').appendChild(postDiv);\n      document.getElementById('delete').onclick = () => finishFlag(flagged[i], 1, changeState);\n      document.getElementById('keep').onclick = () => finishFlag(flagged[i], 0, changeState);\n      // eslint-disable-next-line no-console\n      console.log(document.getElementById(postId));\n    }\n  }\n};\n\nexport {\n  getFlaggedPostsForReview,\n  parseFlaggedPosts,\n};\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './LoginForm.css';\r\n\r\nconst lib = require('./LoginModule');\r\n\r\nfunction LoginForm(props) {\r\n  const { changeState, addAttempt, attempt } = props;\r\n\r\n  const message = `Username or password does not exist. You have ${3 - attempt} more tries`;\r\n\r\n  return (\r\n    <div className=\"LoginForm\">\r\n      <h1>Welcome!</h1>\r\n      {window.location.href.split('/').pop() === 'error' ? (\r\n        <p>\r\n          {message}\r\n        </p>\r\n      ) : null}\r\n      {window.location.href.split('/').pop() === 'locked' ? (\r\n        <div>\r\n          <p>Your account is locked out.</p>\r\n          <p>Please wait about 30 minutes to log back in. RIP</p>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"textDiv\" id=\"usernameDiv\">\r\n        <label htmlFor=\"username\">\r\n          Username:\r\n          <input className=\"text\" id=\"username\" type=\"text\" placeholder=\"username\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"textDiv\" id=\"passwordDiv\">\r\n        <label htmlFor=\"password\">\r\n          Password:\r\n          <input className=\"text\" id=\"password\" type=\"password\" placeholder=\"password\" />\r\n        </label>\r\n      </div>\r\n      <p>\r\n        Not a user?\r\n        <Link id=\"registrationLink\" to=\"/registration\" onClick={() => changeState({ link: '/registration' })}> Create an account. </Link>\r\n      </p>\r\n      <p>\r\n        Forgot your password?\r\n        <Link id=\"passwordLink\" to=\"/loginchangepassword\" onClick={() => changeState({ link: '/changepassword' })}> Create a new password. </Link>\r\n      </p>\r\n      <Link to=\"/main\" onClick={() => lib.verifyUser(changeState, document.getElementById('username').value, document.getElementById('password').value, addAttempt, attempt)}>\r\n        <input id=\"loginButton\" type=\"submit\" value=\"Login\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport '../login-page/LoginForm.css';\n\nconst lib = require('./RegistrationModule');\n\nfunction RegistrationForm(props) {\n  const { changeState } = props;\n\n  const renderWarnings = () => {\n    if (window.location.href.split('/').pop() === 'invalid') {\n      return (<p>Password confirmation does not match password.</p>);\n    } if (window.location.href.split('/').pop() === 'user') {\n      return (<p>This username has already been taken.</p>);\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"RegistrationForm\">\n      <h1>Welcome!</h1>\n      {renderWarnings()}\n      <div className=\"textDiv\" id=\"usernameDiv\">\n        <label htmlFor=\"username\">\n          Username:\n          <input className=\"text\" id=\"username\" type=\"text\" placeholder=\"username\" />\n        </label>\n      </div>\n      <div className=\"textDiv\" id=\"passwordDiv\">\n        <label htmlFor=\"password1\">\n          Password:\n          <input className=\"text\" id=\"password1\" type=\"password\" placeholder=\"password\" />\n        </label>\n      </div>\n      <div className=\"textDiv\" id=\"passwordDiv\">\n        <label htmlFor=\"password2\">\n          Confirm Password:\n          <input className=\"text\" id=\"password2\" type=\"password\" placeholder=\"password\" />\n        </label>\n      </div>\n      <input id=\"createButton\" type=\"submit\" value=\"Create Account\" onClick={() => lib.createAccount(changeState, document.getElementById('username').value, document.getElementById('password1').value, document.getElementById('password2').value)} />\n    </div>\n  );\n}\n\nexport default RegistrationForm;\n","import React from 'react';\nimport './LoginForm.css';\n\nconst lib = require('./LoginModule');\n\nfunction ChangePasswordForm(props) {\n  const { changeState } = props;\n\n  return (\n    <div className=\"ChangePasswordForm\">\n      <h1>Welcome!</h1>\n      {(window.location.href.split('/').pop() === 'invalid') ? (<p>Password confirmation does not match password.</p>) : null}\n      {(window.location.href.split('/').pop() === 'user') ? (<p>Username does not exist.</p>) : null}\n      <div className=\"textDiv\" id=\"usernameDiv\">\n        <label htmlFor=\"username\">\n          Username:\n          <input className=\"text\" id=\"username\" type=\"text\" placeholder=\"username\" />\n        </label>\n      </div>\n      <div className=\"textDiv\" id=\"passwordDiv\">\n        <label htmlFor=\"password1\">\n          New password:\n          <input className=\"text\" id=\"password1\" type=\"password\" placeholder=\"password\" />\n        </label>\n      </div>\n      <div className=\"textDiv\" id=\"passwordDiv\">\n        <label htmlFor=\"password2\">\n          Confirm new password:\n          <input className=\"text\" id=\"password2\" type=\"password\" placeholder=\"password\" />\n        </label>\n      </div>\n      <input id=\"createButton\" type=\"submit\" value=\"Update password\" onClick={() => lib.changePassword(changeState, document.getElementById('username').value, document.getElementById('password1').value, document.getElementById('password2').value)} />\n    </div>\n  );\n}\n\nexport default ChangePasswordForm;\n","import { React, useState } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport LoginForm from './LoginForm';\r\nimport RegistrationForm from '../registration-page/RegistrationForm';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\nfunction LoginPage(props) {\r\n  const { changeState } = props;\r\n  const [attempt, addAttempt] = useState(0);\r\n\r\n  const conditionalRender = () => {\r\n    if (window.location.href.split('/').pop() === '' || window.location.href.split('/')[3] === 'error' || window.location.href.split('/')[3] === 'locked') {\r\n      return (<LoginForm changeState={(input) => changeState(input)} id=\"loginForm\" attempt={attempt} addAttempt={(i) => addAttempt(i)} />);\r\n    }\r\n    if (window.location.href.split('/')[3] === 'loginchangepassword') {\r\n      return (<ChangePasswordForm changeState={(input) => changeState(input)} />);\r\n    }\r\n    if (window.location.href.split('/')[3] === 'registration') {\r\n      return (<RegistrationForm key=\"registrationForm\" changeState={(input) => changeState(input)} id=\"registrationForm\" />);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"LoginPage\">\r\n        <div id=\"artSide\">\r\n          <div className=\"rectWrapper\">\r\n            <div className=\"rect\" id=\"rect1\" />\r\n            <div className=\"rect\" id=\"rect2\" />\r\n            <div className=\"rect\" id=\"rect3\" />\r\n            <div className=\"rect\" id=\"rect4\" />\r\n          </div>\r\n        </div>\r\n        <div id=\"loginFormContainer\">\r\n          {conditionalRender()}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import { React, useState, useEffect } from 'react';\nimport './Home.css';\n\nconst lib = require('./HomeModule');\n\nconst clickProfile = (props) => {\n  const url = '/profile';\n  props.changeState({ link: url });\n};\n\nfunction Home(props) {\n  const { changeState, state } = props;\n  const [filters, setFilters] = useState([]);\n  const [selectedFilter, updateSelectedFilter] = useState('');\n  const [selectedSort, updateSelectedSort] = useState('none');\n\n  const update = async () => {\n    await lib.getFilterOptions(setFilters);\n    const groups = await lib.getFilteredGroups(selectedFilter, selectedSort);\n    lib.parseFilteredGroups(groups, changeState, selectedFilter);\n  };\n  useEffect(() => { update(); }, [selectedFilter, selectedSort]);\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n\n          <div className=\"post-create-area\">\n            <div id=\"filterForm\">\n              Filter group list by topic:\n              <div id=\"filterInput\">\n                <select id=\"topics\" name=\"topics\">\n                  {filters.map((filter) => (\n                    <option key={`topics-${filter}`} value={filter} name={filter}>{filter}</option>\n                  ))}\n                </select>\n                <div id=\"buttons\">\n                  <input type=\"submit\" onClick={() => lib.changeSelectedFilter(updateSelectedFilter)} value=\"Submit filters\" />\n                  <input type=\"submit\" onClick={() => lib.resetSelected(updateSelectedFilter)} value=\"Reset filters\" />\n                </div>\n              </div>\n            </div>\n            <div id=\"sortForm\">\n              Sort groups:\n              <div id=\"filterInput\">\n                <select id=\"sorts\" name=\"sorts\">\n                  <option value=\"new\" name=\"Newest post\">Newest post</option>\n                  <option value=\"posts\" name=\"Number of posts\">Number of posts</option>\n                  <option value=\"members\" name=\"Number of members\">Number of members</option>\n                </select>\n                <div id=\"buttons\">\n                  <input type=\"submit\" onClick={() => lib.changeSelectedSort(updateSelectedSort)} value=\"Submit sort\" />\n                  <input type=\"submit\" onClick={() => lib.resetSelectedSort(updateSelectedSort)} value=\"Reset sort\" />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"groups-area\" id=\"groups-area\">\n            No groups meet the criteria chosen!\n          </div>\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\nexport { clickProfile };\n","import './ProfilePage.css';\nimport React, { useEffect, useState } from 'react';\n\nconst {\n  getProfile,\n  // getUserPosts,\n  sendReply,\n  getRegistrationDate,\n} = require('./ProfileModule');\n\nfunction ProfilePage(props) {\n  // dummy profile to help implement component frontend with right schema\n  // define states\n  const dummyProfile = {\n    biography: '',\n    first_name: 'Stacy',\n    last_name: 'Shapiro',\n    user_id: 9,\n    profile_picture_url: 'https://www.psypost.org/wp-content/uploads/2017/08/meditating-woman.jpg',\n  };\n\n  const { changeState, state } = props;\n\n  const [userProfile, setUserProfile] = useState(dummyProfile);\n  const [userPosts, setUserPosts] = useState([]);\n  const [registrationDate, setRegoDate] = useState('');\n\n  const updateUserPosts = async () => {\n    // extract id from props\n    const { userId } = state;\n\n    // const dummyId = 9;\n\n    // call backend for content linked to userId\n    // const postsToSet = await getUserPosts(userId);\n    const profileToSet = await getProfile(userId);\n\n    // just for testing\n    const regoDate = await getRegistrationDate(userId);\n    // eslint-disable-next-line no-console\n    console.log('user registration date is: ', regoDate);\n\n    // update state\n    // setUserPosts(postsToSet);\n    setUserPosts([]);\n    // don't know why I need to index it at all let alone double, gets the right data structure\n    setUserProfile(profileToSet[0][0]);\n    setRegoDate(regoDate);\n  };\n\n  useEffect(() => {\n    updateUserPosts();\n  }, []);\n\n  // useEffect(async () => {\n  //  console.log('state updated, userPosts is now: ', userPosts);\n  // }, [userPosts]);\n\n  return (\n    <div className=\"App\">\n      <div id=\"cover_space\">\n        <img id=\"user_profile_pic\" src={userProfile.profile_picture_url} alt=\"\" />\n        <div id=\"main_title\">\n          {`${state.username}`}\n          &apos;s FaceTok Page\n        </div>\n      </div>\n      <div id=\"nav_button_container\">\n        <div className=\"nav_button\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"nav_button\" onClick={() => changeState({ link: '/home' })} onKeyDown={() => changeState({ link: '/home' })} role=\"link\" tabIndex={0}>Groups</div>\n        <div className=\"nav_button\" onClick={() => changeState({ link: '/changepassword', userId: userProfile.user_id })} onKeyDown={() => changeState({ link: '/changepassword', userId: userProfile.user_id })} role=\"link\" tabIndex={0}>Set bio or profile pic</div>\n        <div className=\"nav_button\" onClick={() => changeState({ link: '/changepassword', userId: userProfile.user_id })} onKeyDown={() => changeState({ link: '/changepassword', userId: userProfile.user_id })} role=\"link\" tabIndex={0}>Change password</div>\n        <div className=\"nav_button\" id=\"deactivateButton\" onClick={() => changeState({ link: '/deactivate-account' })} onKeyDown={() => changeState({ link: '/deactivate-account' })} role=\"link\" tabIndex={0}>Deactivate account</div>\n      </div>\n      <div id=\"main_content_container\">\n        <div id=\"key_bio_info\">\n          <b>\n            {state.username}\n            &apos;s bio\n          </b>\n          <p />\n          {userProfile.biography}\n          <p />\n          <p />\n          Account registration date:\n          <p />\n          {registrationDate}\n        </div>\n        <div id=\"post_container\">\n          {userPosts.map((post) => (\n            <div key={`post-${post.post_id}`} className=\"wall_post\">\n              <b>\n                <div className=\"main_post\">\n                  {`${userProfile.first_name} ${userProfile.last_name}`}\n                  &nbsp;posted:\n                </div>\n              </b>\n              <p />\n              <div className=\"post_caption\">\n                {post.caption}\n              </div>\n              <div className=\"reply_content_container\">\n                { post.comments.map((comment) => (\n                  <div key={`comment-${comment.name}`}>\n                    <p />\n                    <b className=\"reply_content_name\">\n                      {comment.name}\n                    </b>\n                    <div className=\"reply_text\">\n                      {comment.comment_txt}\n                    </div>\n                  </div>\n                )) }\n                <p />\n                <div className=\"reply_container\">\n                  <div className=\"post_reply_textbox\" id={`reply_for_post_${post.post_id}`}> Type your reply here...</div>\n\n                  <div className=\"post_reply_button\" onClick={() => sendReply(post.post_id, userProfile.user_id, 'testcommentinsertion!', updateUserPosts)} onKeyDown={() => sendReply(post.post_id, userProfile.user_id, 'testcommentinsertion!', updateUserPosts)} role=\"link\" tabIndex={0}>Reply!</div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n","import { useEffect, useState, React } from 'react';\nimport './Groups.css';\n\nconst lib = require('./GroupsModule');\n\nfunction Groups(props) {\n  const { state, changeState } = props;\n  const [message, setMessage] = useState(' ');\n  // eslint-disable-next-line no-unused-vars\n  const [allGroups, setAllGroups] = useState([]);\n  const [nonMemberGroups, setNonMemberGroups] = useState([]);\n  const [suggestedGroup, setSuggestedGroup] = useState([]);\n\n  const updateGroups = async () => {\n    const groups = await lib.getGroups(changeState);\n    const admins = await lib.getAdmins();\n    // eslint-disable-next-line\n    // const propsState = props.state;\n    const groupMemberships = await lib.getGroupMemberships(state.userId);\n\n    setAllGroups(groups.result);\n    lib.parseGroups(changeState, groups.result[0], admins, groupMemberships);\n    const groups2 = groups.result[0];\n    const nonMemberGroupsResolved = await lib.nonMemberPublicGroups(groupMemberships, groups2);\n    let newSuggestedGroup = await lib.suggestGroup(groupMemberships, groups2);\n\n    setNonMemberGroups(nonMemberGroupsResolved);\n    if (typeof newSuggestedGroup[0] === 'undefined') {\n      newSuggestedGroup = [];\n    }\n    setSuggestedGroup(newSuggestedGroup);\n  };\n\n  const updateMessage = (newMessage) => {\n    setMessage(newMessage);\n  };\n\n  const createGroup = async () => {\n    // eslint-disable-next-line\n    const res = await lib.createGroup(changeState,\n      document.getElementById('groupname').value,\n      1,\n      document.getElementById('groupdescription').value,\n      document.getElementById('ispublic').value,\n      document.getElementById('topic1').value,\n      document.getElementById('topic2').value,\n      document.getElementById('topic3').value,\n    );\n\n    const groups = await lib.getGroups(changeState);\n    const admins = await lib.getAdmins();\n    setAllGroups(groups.result);\n    lib.parseGroups(changeState, groups.result[0], admins);\n  };\n\n  useEffect(() => {\n    updateGroups();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n          <div className=\"post-area\">\n            <div className=\"left-group-input\">\n              <div className=\"textDiv\" id=\"groupnameDiv\">\n                <label htmlFor=\"groupname\">\n                  Group Name:\n                  <input className=\"text\" id=\"groupname\" type=\"text\" placeholder=\"group name\" />\n                </label>\n              </div>\n              <div className=\"textDiv\" id=\"groupdescriptionDiv\">\n                <label htmlFor=\"groupdescription\">\n                  Group Description:\n                  <input className=\"text\" id=\"groupdescription\" type=\"text\" placeholder=\"group description\" />\n                </label>\n              </div>\n              <div className=\"textDiv\" id=\"ispublicDiv\">\n                <label htmlFor=\"ispublic\">\n                  Is Public?\n                  <input className=\"text\" id=\"ispublic\" type=\"text\" placeholder=\"1 or 0\" />\n                </label>\n              </div>\n            </div>\n            <div className=\"right-group-input\">\n              <div className=\"textDiv\" id=\"topic1Div\">\n                <label htmlFor=\"topic1\">\n                  Topic 1:\n                  <input className=\"text\" id=\"topic1\" type=\"text\" placeholder=\"group topic 1\" />\n                </label>\n              </div>\n              <div className=\"textDiv\" id=\"topic2Div\">\n                <label htmlFor=\"groupdescription\">\n                  Topic 2:\n                  <input className=\"text\" id=\"topic2\" type=\"text\" placeholder=\"group topic 2\" />\n                </label>\n              </div>\n              <div className=\"textDiv\" id=\"topic-3-Div\">\n                <label htmlFor=\"ispublic\">\n                  Topic 3:\n                  <input className=\"text\" id=\"topic3\" type=\"text\" placeholder=\"group topic 3\" />\n                </label>\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"createGroup\" onClick={() => { createGroup(); updateGroups(); }}> Create A Group </button>\n          </div>\n\n          <div className=\"heading-for-groups\" id=\"heading-for-groups\">\n            Groups in which you&apos;re a member:\n          </div>\n\n          <div className=\"groups-area\" id=\"groups-area\">\n            There are no groups yet!\n          </div>\n\n          <div className=\"groups-non-member-message\" id=\"groups-non-member-message\">\n            {message}\n          </div>\n\n          <div className=\"heading-for-groups\" id=\"heading-for-groups-non-member\">\n            Other public groups you can request to join:\n          </div>\n\n          <div className=\"groups-area\" id=\"groups-area-non-member\">\n            <p />\n            {nonMemberGroups.map((group) => (\n              <div className=\"non-member-group group-container\" key={group.group_name}>\n                <div>\n                  {`Group name: ${group.group_name}`}\n                </div>\n                <div>\n                  {`Group description: ${group.group_description}`}\n                </div>\n                <div>\n                  <input type=\"button\" value=\"Request to join group\" id=\"submit\" onClick={() => lib.requestJoinGroup(state.userId, group.group_id, updateMessage)} />\n                </div>\n                <p />\n              </div>\n            ))}\n          </div>\n\n          <div className=\"heading-for-groups\" id=\"heading-for-suggested-group\">\n            Here&apos;s a heavily personalised (not randomised at all) group recommendation:\n          </div>\n\n          <div className=\"groups-area\" id=\"groups-area-suggestions\">\n            {suggestedGroup.map((group) => (\n              <div className=\"non-member-group group-container\" key={`suggest-${group.group_name}`}>\n                <div>\n                  {`Group name: ${group.group_name}`}\n                </div>\n                <div>\n                  {`Group description: ${group.group_description}`}\n                </div>\n                <div>\n                  <input type=\"button\" value=\"Request to join group\" id=\"submit\" onClick={() => lib.requestJoinGroup(state.userId, group.group_id, updateMessage)} />\n                </div>\n                <p />\n              </div>\n            ))}\n          </div>\n\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Groups;\n","const database = require('../DatabaseModule');\n\nconst getNotifications = async (id) => {\n  const response = await database.sendGetRequest('/notifications/', { id });\n  if (response.err === undefined) {\n    // eslint-disable-next-line no-console\n    console.log(response);\n    return response;\n  }\n  return null;\n};\n\nexport default getNotifications;\n","import { useState, useEffect, React } from 'react';\nimport getNotifications from './NotificationModule';\nimport './NotificationPage.css';\n\nfunction NotificationPage(props) {\n  const { changeState, state } = props;\n\n  const [notifs, setNotifs] = useState([]);\n\n  const updateNotifs = async () => {\n    const n = await getNotifications(state.userId);\n\n    setNotifs(n);\n  };\n\n  // eslint-disable-next-line\n  console.log(notifs);\n\n  useEffect(() => { updateNotifs(); }, []);\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n          {notifs.map((n) => (\n            <div className=\"notification\" key={n.id}>\n              <div className=\"title\">\n                {\n                  `Notification! ${new Date(Date.parse(n.date)).getMonth()}-${new Date(Date.parse(n.date)).getDate()}-${new Date(Date.parse(n.date)).getFullYear()} at ${new Date(Date.parse(n.date)).getHours()}:${new Date(Date.parse(n.date)).getMinutes()}`\n                }\n              </div>\n              <div className=\"info\">\n                <div className={`mark-as-read-dot ${n.is_read === 1 ? 'read' : 'unread'}`} />\n                <div className=\"message\">{n.msg}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default NotificationPage;\n","import React, { useState } from 'react';\n\nconst { createHash } = require('crypto');\nconst { sendPutRequest } = require('../DatabaseModule');\n\nconst changePassword = async (pass1, pass2, userId, updateMessage) => {\n  // eslint-disable-next-line no-console\n  console.log('entered change password with pass 1 of ', pass1, 'and pass 2 of ', pass2);\n  if (pass1 !== pass2) {\n    updateMessage('the two passwords don\\'t match - try again!');\n  } else {\n    // update in DB\n    const userPassword = createHash('sha256').update(pass1).digest('hex');\n    const reqBody = { id: userId, user_password: userPassword };\n\n    // need put request\n    const url = `/user/${userId}`;\n    const response = await sendPutRequest(url, reqBody);\n    // eslint-disable-next-line no-console\n    console.log('printing response ', response);\n\n    updateMessage('password updated successfully!');\n  }\n  return 0;\n};\n\nconst changeBio = async (newBio, userId, updateMessage) => {\n  const reqBody = { id: userId, biography: newBio };\n\n  const url = `/profile/${userId}`;\n  const response = await sendPutRequest(url, reqBody);\n  // eslint-disable-next-line no-console\n  console.log('printing response ', response);\n\n  updateMessage('bio updated successfully!');\n};\n\nconst changeProfilePic = async (picUrl, userId, updateMessage) => {\n  const reqBody = { id: userId, profilePictureURL: picUrl };\n\n  const apiUrl = `/profile-pic/${userId}`;\n  const response = await sendPutRequest(apiUrl, reqBody);\n  // eslint-disable-next-line no-console\n  console.log('printing response ', response);\n\n  updateMessage('profile pic updated successfully!');\n};\n\nconst showMessage = (message) => (\n  <div>\n    <p />\n    {message}\n    <p />\n  </div>\n);\n\nconst UpdatePassword = (props) => {\n  const { userId, changeState } = props;\n  const [message, mutateMessage] = useState('');\n\n  const updateMessage = (newMessage) => {\n    mutateMessage(newMessage);\n  };\n\n  return (\n    <div>\n      {showMessage(message)}\n      <div className=\"textDiv\" id=\"passwordDiv\">\n        <label htmlFor=\"password1\">\n          New password:\n          <input className=\"text\" id=\"changepassword1\" type=\"password\" placeholder=\"password\" />\n        </label>\n      </div>\n      <div className=\"textDiv\" id=\"passwordDiv\">\n        <label htmlFor=\"password2\">\n          Confirm new password:\n          <input className=\"text\" id=\"changepassword2\" type=\"password\" placeholder=\"password\" />\n        </label>\n      </div>\n      <input id=\"updatePasswordButton\" type=\"submit\" value=\"Update Password\" onClick={() => changePassword(document.getElementById('changepassword1').value, document.getElementById('changepassword2').value, userId, updateMessage)} />\n      <p />\n      <div className=\"textDiv\" id=\"newBioDiv\">\n        <label htmlFor=\"newBio\">\n          New bio:\n          <input className=\"text\" id=\"newBioInput\" type=\"text\" placeholder=\"Enter new Bio text here\" />\n        </label>\n      </div>\n      <input id=\"updateBioButton\" type=\"submit\" value=\"Update Bio\" onClick={() => changeBio(document.getElementById('newBioInput').value, userId, updateMessage)} />\n      <p />\n      <div className=\"textDiv\" id=\"newProfilePicDiv\">\n        <label htmlFor=\"newPic\">\n          New profile pic:\n          <input className=\"text\" id=\"newPicInput\" type=\"text\" placeholder=\"Paste the URL to an image here\" />\n        </label>\n      </div>\n      <input id=\"updatePictureButton\" type=\"submit\" value=\"Update Profile Pic\" onClick={() => changeProfilePic(document.getElementById('newPicInput').value, userId, updateMessage)} />\n      <p />\n      <input id=\"backToProfileButton\" type=\"submit\" value=\"Back to profile page\" onClick={() => changeState({ link: '/profile', id: userId })} />\n    </div>\n  );\n};\n\nexport default UpdatePassword;\n","import Axios from 'axios';\n\nconst sendUploadPostRequest = async function sendUploadPostRequest(url, body) {\n  const res = await Axios.post(url, body);\n  return res;\n};\n\nexport default sendUploadPostRequest;\n","import sendUploadPostRequest from '../UploadModule';\n\nconst database = require('../DatabaseModule');\n\nconst getGroup = async (id) => {\n  const response = await database.sendGetGroupsRequest(`/groups/${id}`);\n\n  return response;\n};\n\nconst getAdmins = async (id) => {\n  const response = await database.sendGetRequest(`/admins/${id}`);\n\n  return response;\n};\n\nconst revokeAdmin = async (state, changeState, groupAndAdmins, setGroupAndAdmins) => {\n  const response = await database.sendDeleteRequest(`/admins?groupId=${state.viewingGroup}&adminUser=${document.getElementById('revokeAdmin').value}&groupName=${groupAndAdmins.group.group_name}`);\n\n  if (typeof response.message !== 'undefined') {\n    changeState({ link: '/viewgroup/error' });\n  }\n\n  await setGroupAndAdmins();\n\n  return response;\n};\n\nconst addAdmin = async (groupAndAdmins, setGroupAndAdmins, changeState) => {\n  const response = await database.sendPostRequest('/admins', {\n    admin: {\n      adminUser: document.getElementById('addAdmin').value,\n      groupId: groupAndAdmins.group.group_id,\n      isCreator: 0,\n      groupName: groupAndAdmins.group.group_name,\n    },\n  });\n\n  if (typeof response.err !== 'undefined') {\n    changeState({ link: '/viewgroup/admin' });\n    return null;\n  }\n\n  await setGroupAndAdmins();\n\n  return response;\n};\n\nconst inviteNonAdmin = async (groupAndAdmins, state, setGroupAndAdmins) => {\n  const url = '/invitations/';\n  const toUserName = document.getElementById('addNonAdmin').value;\n\n  // get the userid using the username.\n  // I've just used one argument because the concatenation method in DatabaseModule\n  // produced some funny results. Didn't want to change it in case I broke somebody else's work!\n  // So I've done the url concat here.\n  const toUserId = await database.sendGetRequest(`/user-by-name/${toUserName}`);\n  const body = {\n    // put in the request username from document here\n    fromUserId: state.userId,\n    groupId: groupAndAdmins.group.group_id,\n    toUserId: toUserId[0].user_id,\n    invitationStatus: 'pending',\n  };\n  const response = await database.sendPostRequest(url, body);\n  await setGroupAndAdmins();\n  return response;\n};\n\nconst leaveGroup = async (userId, groupId, updateMessage) => {\n  // update database - delete from groupMembership\n  await database.sendBodiedDeleteRequest(`/leave-group/${groupId}`, { userId });\n\n  // update message\n  updateMessage('Membership deleted! You are no longer a member of the group');\n};\n\nconst uploadMediaPost = async (\n  changeState,\n  postGroup,\n  postingUser,\n  caption,\n  selected,\n  updateState,\n  postingUsername,\n) => {\n  const file = document.getElementById('postContent').files[0];\n  if (selected === 'image' && file.size > 10000000) {\n    updateState({ link: '/viewgroup/post/error' });\n    return null;\n  } if ((selected === 'audio' || selected === 'video') && file.size > 100000000) {\n    updateState({ link: '/viewgroup/post/error' });\n    return null;\n  }\n\n  const data = new FormData();\n  data.append('file', file);\n  data.append('upload_preset', ['yj7lgb8v']);\n  sendUploadPostRequest(`https://api.cloudinary.com/v1_1/cis557-project-group-18/${selected === 'image' ? 'image' : 'video'}/upload`, data).then((mediaUrl) => {\n    const newPost = {\n      post_group: postGroup,\n      posting_user: postingUser,\n      caption,\n      posting_username: postingUsername,\n    };\n\n    if (selected === 'image') {\n      newPost.photourl = mediaUrl.data.url;\n    } else if (selected === 'video') {\n      newPost.videoUrl = mediaUrl.data.url;\n    } else {\n      newPost.audioUrl = mediaUrl.data.url;\n    }\n\n    return database.sendPostRequest(`/post/${selected}`, newPost).then(() => {\n      changeState({ link: '/viewgroup' });\n    });\n  });\n  return null;\n};\n\nconst createPost = async (\n  changeState,\n  postGroup,\n  postingUser,\n  caption,\n  selected,\n  updateState,\n  postingUsername,\n) => {\n  if (selected === 'audio') {\n    return uploadMediaPost(\n      changeState,\n      postGroup,\n      postingUser,\n      caption,\n      selected,\n      updateState,\n      postingUsername,\n    );\n  }\n  if (selected === 'video') {\n    return uploadMediaPost(\n      changeState,\n      postGroup,\n      postingUser,\n      caption,\n      selected,\n      updateState,\n      postingUsername,\n    );\n  }\n  if (selected === 'image') {\n    return uploadMediaPost(\n      changeState,\n      postGroup,\n      postingUser,\n      caption,\n      selected,\n      updateState,\n      postingUsername,\n    );\n  }\n\n  const newPost = {\n    post_group: postGroup,\n    posting_user: postingUser,\n    posting_username: postingUsername,\n    caption,\n  };\n\n  // TODO check the length of post, if over 200 characters say too long\n  if (caption.length > 200) {\n    changeState({ link: '/viewgroup/post/error' });\n    return null;\n  }\n\n  const response = await database.sendPostRequest('/post/text', newPost);\n  return response;\n};\n\nconst getPosts = async (changeState, groupId) => {\n  const response = await database.sendGetRequest(`/posts/${groupId}`);\n\n  return response;\n};\n\nconst flagPost = async (changeState, postId) => {\n  const response = await database.sendPutRequest(`/flag-post/${postId}`);\n  changeState({ link: '/viewgroup' });\n\n  return response;\n};\n\nconst hidePost = async (changeState, postId) => {\n  const response = await database.sendPutRequest(`/hide-post/${postId}`);\n  changeState({ link: '/viewgroup' });\n\n  return response;\n};\n\nconst deletePost = async (state, changeState, postId, postingUser) => {\n  const admins = await database.sendGetRequest(`/admins/${state.viewingGroup}`);\n  const adminNames = [];\n\n  for (let i = 0; i < admins.length; i += 1) {\n    // eslint-disable-next-line no-console\n    console.log(admins[i].user_name);\n    adminNames.push(admins[i].user_name);\n  }\n\n  if (postingUser === state.userId) {\n    const response = await database.sendDeleteRequest(`/post/${postId}`);\n    changeState({ link: '/viewgroup' });\n\n    return response;\n  }\n\n  if (adminNames.includes(state.username)) {\n    // delete the message\n    const response = await database.sendDeleteRequest(`/post/${postId}`);\n\n    // get user info\n    const user = await database.sendGetRequest(`/user/${postingUser}`);\n    const userName = user[0].user_name;\n\n    // eslint-disable-next-line\n    alert(`You have deleted ${userName}'s post. A notification has been sent to ${userName} regarding this deletion.`);\n    changeState({ link: '/viewgroup' });\n\n    // post notification\n    const notifBody = { notification: { isRead: false, msg: `Group admin ${state.username} deleted your post with id ${postId}` } };\n    await database.sendPostRequest(`/notifications/${postingUser}`, notifBody);\n\n    return response;\n  }\n\n  // eslint-disable-next-line\n  alert('You cannot delete this post because you are neither the author or admin of this group.');\n  return null;\n};\n\nconst flagReply = async (changeState, replyId) => {\n  const response = await database.sendPutRequest(`/flag-reply/${replyId}`);\n  changeState({ link: '/viewgroup' });\n\n  return response;\n};\n\nconst hideReply = async (changeState, replyId) => {\n  const response = await database.sendPutRequest(`/hide-reply/${replyId}`);\n  changeState({ link: '/viewgroup' });\n\n  return response;\n};\n\nconst deleteReply = async (changeState, replyId) => {\n  const response = await database.sendDeleteRequest(`/reply/${replyId}`);\n  changeState({ link: '/viewgroup' });\n\n  return response;\n};\n\nconst editReply = async (replyId, setEditComment) => {\n  const response = await database.sendPostRequest(`/reply/${replyId}`, { caption: document.getElementById('edit-reply').value });\n  setEditComment(-1);\n\n  return response;\n};\n\nconst createReply = async (postId, postGroup, postingUser, caption, changeState) => {\n  const newReply = {\n    post_id: postId,\n    post_group: postGroup,\n    posting_user: postingUser,\n    // eslint-disable-next-line\n    caption: caption,\n  };\n  // eslint-disable-next-line no-console\n  console.log(newReply);\n  // eslint-disable-next-line\n  const response = await database.sendPostRequest('/reply', newReply);\n\n  changeState({ link: '/viewgroup' });\n  // eslint-disable-next-line no-console\n  console.log(response);\n};\n\nconst getReplies = async (changeState, groupId) => {\n  // eslint-disable-next-line no-console\n  console.log(groupId);\n  const response = await database.sendGetRequest(`/replies/${groupId}`);\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n  return response;\n};\n\nconst parsePosts = (posts) => {\n  // remove all children in the box\n  const element = document.getElementById('posts-area');\n\n  if (element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  // then add all the groups\n  for (let i = 0; i < posts.length; i += 1) {\n    const post = posts[i];\n    const postId = post.post_id;\n    const postingUser = post.posting_username;\n    // eslint-disable-next-line prefer-destructuring\n    const caption = post.caption;\n    let content = '';\n    if (posts[i].photourl !== null) {\n      content += `<div class=\"content image\">\n          <img src=${posts[i].photourl} class=\"image\" alt=\"${posts[i].posting_username}'s image\" />\n        </div>`;\n    } else if (posts[i].audioUrl !== null) {\n      content += `<div class=\"content audio\">\n          <audio controls>\n            <source src=${posts[i].audioUrl}>\n          </audio>\n        </div>`;\n    } else if (posts[i].videoUrl !== null) {\n      content += `<div class=\"content video\">\n          <video src=${posts[i].videoUrl} controls>\n            Something went wrong!\n          </video>\n        </div>`;\n    }\n\n    // eslint-disable-next-line prefer-template\n    const postBlock = `<div class=\"post-container\" id=${postId}>`\n    + '<div class=\"post-info\">'\n    + '<ul>'\n    + '<li id=\"post-id\" >Post Id: '\n    + postId\n    + '</li>'\n    + '<li id=\"posting-user\">Posting User: '\n    + postingUser\n    + '</li>'\n    + '<li id=\"caption\">Caption: '\n    + caption\n    + '</li>'\n    + '<li id=\"content\">'\n    + content\n    + '</li>'\n    + '</ul>'\n    + '</div>'\n    + `<div class=\"comments\" id=\"comments-${postId}\">`\n    + '<div class=\"create-comment\">'\n    + '<div class=\"reply\">'\n    + `<textarea class=\"reply-input\" id=\"input-${postId}\" placeholder=\"reply to this post\"></textarea>`\n    // eslint-disable-next-line prefer-template\n    + `<button type=\"reply-button\" id=\"reply-button-${postId}\"> Reply </button>`\n    + '</div>'\n    + '<div type=\"flag-and-delete-post\">'\n    + '<p>Post options: </p>'\n    + `<button type=\"flag\" id=\"flag-post-${postId}\"> Flag </button>`\n    + `<button type=\"hide\" id=\"hide-post-${postId}\"> Hide </button>`\n    + `<button type=\"delete\" id=\"delete-post-${postId}\"> Delete </button>`\n    + '</div>'\n    + '</div>'\n    + '</div>'\n    + '</div>';\n\n    const postDiv = document.createElement('div');\n    postDiv.innerHTML = postBlock;\n\n    document.getElementById('posts-area').appendChild(postDiv);\n  }\n};\n\nconst parseReplies = (posts, replies, editComment, setEditComment) => {\n  // iterate over all posts\n  for (let i = 0; i < posts.length; i += 1) {\n    const post = posts[i];\n    const postId = post.post_id;\n\n    const element = document.getElementById(`comments-${postId}`);\n\n    // iterate over all replies and those that belong to the current post will be appended\n    for (let j = 0; j < replies.length; j += 1) {\n      const reply = replies[j];\n      const replyId = reply.reply_id;\n      const replyUser = reply.posting_user;\n      // eslint-disable-next-line prefer-destructuring\n      const caption = reply.caption;\n      const replyPostId = reply.post_id;\n\n      if (replyPostId === postId) {\n        // eslint-disable-next-line prefer-template\n        let replyBlock = '<div class=\"reply-container\">'\n        + '<div class=\"reply-info\">'\n        + '<ul>'\n        + '<li id=\"reply-id\" >Reply Id: '\n        + replyId\n        + '</li>'\n        + '<li id=\"replying-user\">Replying User: '\n        + replyUser\n        + '</li>';\n\n        if (editComment === -1) {\n          replyBlock += `<li id=\"caption\">Caption: ${caption}`\n          + '</li>'\n          + '</ul>'\n          + '</div>'\n          + '<div type=\"flag-and-delete\">'\n          + `<button type=\"flag\" id=\"flag-reply-${replyId}\"> Flag </button>`\n          + `<button type=\"hide\" id=\"hide-reply-${replyId}\"> Hide </button>`\n          + `<button type=\"edit\" id=\"edit-reply-${replyId}\"> Edit </button>`\n          + `<button type=\"delete\" id=\"delete-reply-${replyId}\"> Delete </button>`\n          + '</div>'\n          + '</div>';\n        } else {\n          replyBlock += '</ul>'\n            + '</div>'\n            + `<textarea class=\"reply-input\" id=\"edit-reply\" placeholder=\"reply to this post\">${caption}</textarea>`\n            // eslint-disable-next-line prefer-template\n            + '<button type=\"edit-reply-submit-button\" id=\"edit-reply-submit-button\"> Reply </button>'\n            + '</div>'\n            + '</div>';\n        }\n\n        const replyDiv = document.createElement('div');\n        replyDiv.innerHTML = replyBlock;\n        element.appendChild(replyDiv);\n        if (document.getElementById('edit-reply-submit-button') !== null) {\n          document.getElementById('edit-reply-submit-button').onclick = () => { editReply(replyId, setEditComment); };\n        }\n      }\n    }\n  }\n};\n\nconst parseOnclicks = (state, changeState, posts, replies, setEditComment) => {\n  // iterate over all replies and those that belong to the current post will be appended\n  for (let i = 0; i < posts.length; i += 1) {\n    const post = posts[i];\n    const postId = post.post_id;\n    const postingUser = post.posting_user;\n\n    const replyButton = document.getElementById(`reply-button-${postId}`);\n    const flagPostButton = document.getElementById(`flag-post-${postId}`);\n    const hidePostButton = document.getElementById(`hide-post-${postId}`);\n    const deletePostButton = document.getElementById(`delete-post-${postId}`);\n\n    // eslint-disable-next-line max-len\n    replyButton.onclick = () => { createReply(postId, state.viewingGroup, state.userId, document.getElementById(`input-${postId}`).value, changeState); };\n    flagPostButton.onclick = () => { flagPost(changeState, postId); };\n    hidePostButton.onclick = () => { hidePost(changeState, postId); };\n    deletePostButton.onclick = () => { deletePost(state, changeState, postId, postingUser); };\n  }\n\n  for (let j = 0; j < replies.length; j += 1) {\n    const reply = replies[j];\n    const replyId = reply.reply_id;\n\n    const flagReplyButton = document.getElementById(`flag-reply-${replyId}`);\n    const hideReplyButton = document.getElementById(`hide-reply-${replyId}`);\n    const deleteReplyButton = document.getElementById(`delete-reply-${replyId}`);\n    const editReplyButton = document.getElementById(`edit-reply-${replyId}`);\n\n    if (flagReplyButton) {\n      flagReplyButton.onclick = () => { flagReply(changeState, replyId); };\n      hideReplyButton.onclick = () => { hideReply(changeState, replyId); };\n      deleteReplyButton.onclick = () => { deleteReply(changeState, replyId); };\n      editReplyButton.onclick = () => { setEditComment(replyId); };\n    }\n  }\n};\n\nexport {\n  getGroup,\n  getAdmins,\n  revokeAdmin,\n  addAdmin,\n  inviteNonAdmin,\n  createPost,\n  getPosts,\n  parsePosts,\n  createReply,\n  getReplies,\n  parseReplies,\n  parseOnclicks,\n  leaveGroup,\n};\n","import { useState, useEffect, React } from 'react';\nimport {\n  getGroup,\n  getAdmins,\n  revokeAdmin,\n  addAdmin,\n  inviteNonAdmin,\n  createPost,\n  getPosts,\n  parsePosts,\n  getReplies,\n  parseReplies,\n  parseOnclicks,\n  leaveGroup,\n} from './ViewGroupModule';\nimport './ViewGroup.css';\n\n// eslint-disable-next-line\n\nfunction ViewGroup(props) {\n  // eslint-disable-next-line\n  const { changeState, state } = props;\n  // eslint-disable-next-line\n  const [selected, updateSelected] = useState('text');\n\n  const [groupAndAdmins, setGroupAndAdmins] = useState({ group: {}, admins: [] });\n  const [message, setMessage] = useState(' ');\n  const [editComment, setEditComment] = useState(-1);\n\n  const updateState = async () => {\n    const group = await getGroup(state.viewingGroup);\n    const admins = await getAdmins(state.viewingGroup);\n\n    setGroupAndAdmins(() => ({\n      group,\n      admins,\n    }));\n  };\n\n  const updateMessage = (newMessage) => {\n    setMessage(newMessage);\n  };\n\n  const processAdmins = (admins) => {\n    let adminLst = '';\n    admins.forEach((admin) => {\n      const toShow = (admin.is_creator === 1 ? `${admin.user_name} (creator)` : `${admin.user_name}`);\n\n      adminLst += (adminLst === '' ? `${toShow} ` : `, ${toShow}`);\n    });\n    return adminLst;\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const [allPosts, setAllPosts] = useState([]);\n\n  const updatePosts = async () => {\n    const posts = await getPosts(changeState, state.viewingGroup);\n\n    setAllPosts(posts.result);\n    parsePosts(posts.result[0]);\n  };\n\n  const createPostObject = async () => {\n    // eslint-disable-next-line\n    const res = await createPost(changeState,\n      state.viewingGroup,\n      state.userId,\n      document.getElementById('postCaption').value,\n      selected,\n      updateState,\n      state.username,\n    );\n\n    const posts = await getPosts(changeState, state.viewingGroup);\n    // eslint-disable-next-line no-console\n    // console.log(`posts: ${JSON.stringify(posts.result[0])}`);\n\n    setAllPosts(posts.result[0]);\n\n    // eslint-disable-next-line no-console\n    console.log(`all posts: ${JSON.stringify(allPosts)}`);\n    changeState({ link: '/viewgroup' });\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const [allReplies, setAllReplies] = useState([]);\n\n  // eslint-disable-next-line no-unused-vars\n  const updateReplies = async () => {\n    const posts = await getPosts(changeState, state.viewingGroup);\n    const replies = await getReplies(changeState, state.viewingGroup);\n\n    setAllReplies(replies.result);\n    if (replies.result) {\n      parseReplies(posts.result[0], replies.result[0], editComment, setEditComment);\n      parseOnclicks(state, changeState, posts.result[0], replies.result[0], setEditComment);\n    }\n  };\n\n  const conditionalRender = () => {\n    if (selected === 'text') {\n      return (\n        <div id=\"form\">\n          <textarea id=\"postCaption\" placeholder=\"Post message to group\" />\n        </div>\n      );\n    }\n    if (selected === 'audio') {\n      return (\n        <div id=\"form\">\n          <textarea id=\"postCaption\" placeholder=\"Write a caption\" />\n          <input type=\"file\" id=\"postContent\" multiple accept=\"audio/*\" />\n        </div>\n      );\n    }\n    if (selected === 'video') {\n      return (\n        <div id=\"form\">\n          <textarea id=\"postCaption\" placeholder=\"Write a caption\" />\n          <input type=\"file\" id=\"postContent\" multiple accept=\"video/*\" />\n        </div>\n      );\n    }\n    if (selected === 'image') {\n      return (\n        <div id=\"form\">\n          <textarea id=\"postCaption\" placeholder=\"Write a caption\" />\n          <input type=\"file\" id=\"postContent\" multiple accept=\"image/*\" />\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const updates = async () => {\n    await updateState();\n    await updatePosts();\n    await updateReplies();\n  };\n\n  useEffect(() => { updates(); }, [state, editComment]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n          <div className=\"info-area\" id=\"info-area\">\n            <div className=\"group-view\">\n              <div className=\"group-info\">\n                <ul>\n                  <li id=\"group-id\">\n                    {`Group Id: ${groupAndAdmins.group.group_id}`}\n                  </li>\n                  <li id=\"group-name\">\n                    {`Group Name: ${groupAndAdmins.group.group_name}`}\n                  </li>\n                  <li id=\"group-description\">\n                    {`Group Description: ${groupAndAdmins.group.group_description}`}\n                  </li>\n                  <li id=\"group-admins\">\n                    {`Admins: ${processAdmins(groupAndAdmins.admins)}`}\n                  </li>\n                  <li id=\"is-public\">\n                    {(groupAndAdmins.group.is_public === 1 ? 'Public' : 'Private')}\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"join-group\" id=\"join-group-id\">\n              <input type=\"button\" value=\"Leave group\" id=\"submit\" onClick={() => leaveGroup(state.userId, groupAndAdmins.group.group_id, updateMessage)} />\n            </div>\n          </div>\n          {message}\n\n          <div className=\"view-area\" id=\"groups-area\">\n            <div id=\"revoke\">\n              { state.link.includes('/viewgroup/error') ? (<p>Error: cannot revoke creator of group</p>) : (null)}\n              <label htmlFor=\"revokeAdmin\">\n                {'Revoke Admin: '}\n                <input id=\"revokeAdmin\" type=\"text\" placeholder=\"Enter username\" />\n              </label>\n              <input type=\"button\" value=\"Submit\" id=\"submit\" onClick={() => revokeAdmin(state, changeState, groupAndAdmins, setGroupAndAdmins)} />\n            </div>\n            <div id=\"add\">\n              { state.link.includes('/viewgroup/admin') ? (<p>Error: potential admin is not a group member</p>) : (null)}\n              <label htmlFor=\"addAdmin\">\n                {'Add Admin: '}\n                <input id=\"addAdmin\" type=\"text\" placeholder=\"Enter username\" />\n              </label>\n              <input type=\"button\" value=\"Submit\" id=\"submit\" onClick={() => addAdmin(groupAndAdmins, setGroupAndAdmins, changeState)} />\n            </div>\n            <div id=\"add-non-admin\">\n              <label htmlFor=\"addNonAdmin\">\n                Invite a non-Admin member:\n                <input id=\"addNonAdmin\" type=\"text\" placeholder=\"Enter username\" />\n              </label>\n              <input type=\"button\" value=\"Submit\" id=\"submit\" onClick={() => inviteNonAdmin(groupAndAdmins, state, setGroupAndAdmins)} />\n            </div>\n          </div>\n\n          <div className=\"posts-area\">\n            <div className=\"text-input\">\n              Create Post:\n              { state.link.includes('/viewgroup/post/error') ? (<p>Error: post is too large</p>) : (null)}\n              <div id=\"options\">\n                <label htmlFor=\"textInput\" className=\"list\">\n                  <input type=\"radio\" id=\"textInput\" name=\"msgType\" onClick={() => updateSelected('text')} />\n                  Text message\n                </label>\n                <label htmlFor=\"audioInput\" className=\"list\">\n                  <input type=\"radio\" id=\"audioInput\" name=\"msgType\" onClick={() => updateSelected('audio')} />\n                  Audio message\n                </label>\n                <label htmlFor=\"videoInput\" className=\"list\">\n                  <input type=\"radio\" id=\"videoInput\" name=\"msgType\" onClick={() => updateSelected('video')} />\n                  Video message\n                </label>\n                <label htmlFor=\"imageInput\" className=\"list\">\n                  <input type=\"radio\" id=\"imageInput\" name=\"msgType\" onClick={() => updateSelected('image')} />\n                  Image message\n                </label>\n              </div>\n              {conditionalRender()}\n              <button className=\"post-button\" type=\"submit\" onClick={() => createPostObject()}> Post Message </button>\n            </div>\n            <div className=\"posts\" id=\"posts-area\" />\n          </div>\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default ViewGroup;\n","import { useState, useEffect, React } from 'react';\nimport './InvitationPage.css';\n\nconst lib = require('./InvitationModule');\n\nfunction InvitationPage(props) {\n  const { changeState, state } = props;\n  const [pendingInvitations, setPendingInvitations] = useState([]);\n  const [invitationsToReview, setInvitationsToReview] = useState([]);\n  const [message, setMessage] = useState('test');\n\n  const updatePendingInvitations = async () => {\n    let i = await lib.getPendingInvitations(state.userId);\n    i = await lib.getGroupNames(i);\n\n    // setInvitations([{ id: 1, groupName: 'testGroup!' }]);\n    setPendingInvitations(i);\n  };\n\n  const updateInvitationsToReview = async () => {\n    const fetchedInvitationsToReview = await lib.getInvitationsToReview(state.userId);\n    setInvitationsToReview(fetchedInvitationsToReview);\n  };\n\n  const updateMessage = (newMessage) => {\n    setMessage(newMessage);\n  };\n\n  // eslint-disable-next-line\n  // console.log('invitations now at: ', invitations);\n\n  useEffect(() => {\n    updatePendingInvitations();\n    updateInvitationsToReview();\n  }, []);\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n          <div id=\"message\">\n            {message}\n          </div>\n          <div>\n            Invitations to review for groups for which you&apos;re an admin:\n          </div>\n          {invitationsToReview.map((invReview) => (\n            <div className=\"notification\" key={invReview.invitation_id}>\n              <div className=\"title\">\n                Review accepted invitation\n              </div>\n              <div className=\"info\">\n                <div className=\"invite-message\">\n                  { `${invReview.user_name} has accepted an invitation to join ${invReview.group_name}. Do you approve their membership?  ` }\n                </div>\n                <button className=\"approve-invitation\" type=\"button\" onClick={() => lib.approveInvite(invReview, updateInvitationsToReview, updateMessage)}> Accept </button>\n                <button className=\"decline-invitation\" type=\"button\" onClick={() => lib.notApproveInvite(invReview, updateInvitationsToReview, updateMessage)}> Decline </button>\n              </div>\n            </div>\n          ))}\n          <div>\n            Group invitations extended to you:\n          </div>\n          {pendingInvitations.map((inv) => (\n            <div className=\"notification\" key={inv.invitation_id}>\n              <div className=\"title\">\n                Invitation\n              </div>\n              <div className=\"info\">\n                <div className=\"invite-message\">\n                  { `You have been invited to join group ${inv.groupName}. Do you accept?  ` }\n                </div>\n                <button className=\"accept-invitation\" type=\"button\" onClick={() => lib.acceptInvite(inv, updatePendingInvitations, updateMessage, state.userId)}> Accept </button>\n                <button className=\"decline-invitation\" type=\"button\" onClick={() => lib.declineInvite(inv.invitation_id, inv.groupName, updatePendingInvitations, updateMessage)}> Decline </button>\n              </div>\n            </div>\n          ))}\n\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default InvitationPage;\n","const { sendDeleteRequest } = require('../../DatabaseModule');\n\n/** const getCreatorGroups = (userId) => {\n  // get creator groups\n\n  return [userId];\n}; */\n\nconst deleteOpenInvitations = async (userId, urlStem) => {\n  // do a delete\n  const url = `${urlStem}invitations/${userId}`;\n  await sendDeleteRequest(url);\n};\n\nconst deleteGroupMemberships = async (userId, urlStem) => {\n  // do a delete\n  const url = `${urlStem}membership/${userId}`;\n  await sendDeleteRequest(url);\n};\n\nconst deleteAdminRoles = async (userId, urlStem) => {\n  // do a delete\n  const url = `${urlStem}admins/${userId}`;\n  await sendDeleteRequest(url);\n};\n\nconst deleteProfileInfo = async (userId, urlStem) => {\n  // do a delete\n  const url = `${urlStem}profile/${userId}`;\n  await sendDeleteRequest(url);\n};\n\nconst deleteUserInfo = async (userId, urlStem) => {\n  // do a delete\n  const url = `${urlStem}user/${userId}`;\n  await sendDeleteRequest(url);\n};\n\nconst deactivateAccount = async (userId, updateMessage, changeState) => {\n  const urlStem = '/';\n\n  /**\n  // check if a creator of any groups\n  let createdGroups = [];\n  getCreatorGroups(userId, urlStem);\n  if (createdGroups.length > 0) {\n    updateMessage('Can\\'t deactivate this account. It has created a group.');\n    return;\n  }\n   */\n\n  // delete invitations\n  await deleteOpenInvitations(userId, urlStem);\n\n  // delete group memberships\n  await deleteGroupMemberships(userId, urlStem);\n\n  // delete admins - check if group creator\n  await deleteAdminRoles(userId, urlStem);\n\n  // delete profile information\n  await deleteProfileInfo(userId, urlStem);\n\n  // delete user information\n  await deleteUserInfo(userId, urlStem);\n\n  // update message\n  updateMessage('Account deactivated successfully. You will be rerouted to the login page');\n\n  // reroute to main page\n  changeState({ link: '/' });\n};\n\nexport default deactivateAccount;\n","import React, { useState } from 'react';\n\nimport deactivateAccount from './DeactivateModule';\n\nconst DeactivateAccountPage = (props) => {\n  const { state, changeState } = props;\n  const { userId } = state;\n  const [message, mutateMessage] = useState('Are you sure you want to deactivate your account? This pretty much deletes everything');\n\n  const updateMessage = (newMessage) => {\n    mutateMessage(newMessage);\n  };\n\n  return (\n    <div>\n      <div>\n        <p />\n        {message}\n        <p />\n      </div>\n      <input id=\"deactivateAccountButton\" type=\"submit\" value=\"Deactivate Account\" onClick={() => deactivateAccount(userId, updateMessage, changeState)} />\n    </div>\n  );\n};\n\nexport default DeactivateAccountPage;\n","import sendUploadPostRequest from '../UploadModule';\n\nconst database = require('../DatabaseModule');\n\nconst getConvos = async (id) => {\n  const response = await database.sendGetRequest(`/convo/${id}`);\n  const convoInfo = [];\n  for (let i = 0; i < response.length; i += 1) {\n    let otherId = -1;\n    let otherName = '';\n    if (response[i].user1 === id) {\n      otherId = response[i].user2;\n      otherName = response[i].user2Name;\n    } else {\n      otherName = response[i].user1Name;\n      otherId = response[i].user1;\n    }\n\n    convoInfo.push({ ...response[i], otherName, otherId });\n  }\n\n  return convoInfo;\n};\n\nconst parseConvos = (changeState, convos) => {\n  // remove all children in the box\n  if (convos.length !== 0) {\n    const element = document.getElementById('view-convos');\n\n    if (element) {\n      while (element.firstChild) {\n        element.removeChild(element.firstChild);\n      }\n    }\n  }\n\n  for (let i = 0; i < convos.length; i += 1) {\n    const convoBlock = `<div class=\"convo-container\">\n      <div class=\"convo-info\"> <ul> <li id=\"convo-name\">Messages with: ${convos[i].otherName} </li> </ul> </div> </div>`;\n    const div = document.createElement('div');\n    div.innerHTML = convoBlock;\n    div.onclick = () => {\n      changeState({ link: '/conversation', viewingConvo: { id: convos[i].convoId, otherUserId: convos[i].otherId } });\n    };\n\n    document.getElementById('view-convos').appendChild(div);\n  }\n};\n\nconst uploadMediaConvo = async (selected, state, updateMessages, updateState) => {\n  const file = document.getElementById('firstMsg').files[0];\n\n  // check if the file is too large (defined as > 10MB)\n  if (selected === 'image' && file.size > 10000000) {\n    updateState({ link: '/messages/img' });\n    return null;\n  } if ((selected === 'audio' || selected === 'video') && file.size > 100000000) {\n    updateState({ link: '/messages/av' });\n    return null;\n  }\n\n  const data = new FormData();\n  data.append('file', file);\n  data.append('upload_preset', ['yj7lgb8v']);\n  sendUploadPostRequest(`https://api.cloudinary.com/v1_1/cis557-project-group-18/${selected === 'image' ? 'image' : 'video'}/upload`, data).then((mediaUrl) => {\n    // eslint-disable-next-line no-console\n    console.log('SENT MEDIA');\n    // creates conversation in database\n    return database.sendGetRequest(`/user-by-name/${document.getElementById('otherName').value}`).then((resp) => {\n      if (resp.length === 0) {\n        // MAYBE MAKE THIS THE ERROR PAGE DUDE?!?!?!?!?!\n        updateState({ link: '/messages/user' });\n        return null;\n      }\n\n      const otherId = resp[0].user_id;\n\n      const msg = {\n        toId: otherId,\n        fromId: state.userId,\n        senderName: state.username,\n        receiverName: resp[0].user_name,\n      };\n\n      if (selected === 'image') {\n        msg.img = mediaUrl.data.url;\n      } else if (selected === 'video') {\n        msg.video = mediaUrl.data.url;\n      } else {\n        msg.audio = mediaUrl.data.url;\n      }\n\n      return database.sendPostRequest(`/message/${selected}/${otherId}`, { msg }).then((response) => {\n        if (typeof response.err !== 'undefined' && response.err === 'self') {\n          updateState({ link: '/messages/error' });\n          return null;\n        }\n        if (typeof response.err !== 'undefined' && response.err === 'group') {\n          updateState({ link: '/messages/group' });\n          return null;\n        }\n\n        return updateMessages().then(() => response);\n      });\n    });\n  });\n  return null;\n};\n\nconst startConvo = async (selected, state, updateMessages, updateState) => {\n  if (selected === 'audio') {\n    return uploadMediaConvo(selected, state, updateMessages, updateState);\n  }\n  if (selected === 'video') {\n    return uploadMediaConvo(selected, state, updateMessages, updateState);\n  }\n  if (selected === 'image') {\n    return uploadMediaConvo(selected, state, updateMessages, updateState);\n  }\n\n  // creates conversation in database\n  const res = await database.sendGetRequest(`/user-by-name/${document.getElementById('otherName').value}`);\n  if (res.length === 0) {\n    updateState({ link: '/messages/user' });\n    return null;\n  }\n\n  const otherId = res[0].user_id;\n\n  const msg = {\n    toId: otherId,\n    fromId: state.userId,\n    senderName: state.username,\n    receiverName: res[0].user_name,\n    txt: document.getElementById('firstMsg').value,\n  };\n\n  const response = await database.sendPostRequest(`/message/text/${otherId}`, { msg });\n\n  if (typeof response.err !== 'undefined' && response.err === 'self') {\n    updateState({ link: '/messages/error' });\n    return null;\n  }\n  if (typeof response.err !== 'undefined' && response.err === 'group') {\n    updateState({ link: '/messages/group' });\n    return null;\n  }\n\n  await updateMessages();\n\n  return response;\n};\n\nexport {\n  getConvos,\n  parseConvos,\n  startConvo,\n};\n","import { useState, useEffect, React } from 'react';\nimport { getConvos, parseConvos, startConvo } from './MessagesModule';\nimport './Messages.css';\n\nfunction Messages(props) {\n  // eslint-disable-next-line\n  const [msgs, updateMsgs] = useState([]);\n  const [selected, updateSelected] = useState('text');\n  const { changeState, state } = props;\n\n  const updateMessages = async () => {\n    const convos = await getConvos(state.userId);\n    updateMsgs(convos);\n    parseConvos(changeState, convos);\n  };\n\n  useEffect(() => { updateMessages(); }, []);\n\n  const conditionalRender = () => {\n    if (selected === 'text') {\n      return (\n        <div id=\"form\">\n          <input type=\"text\" id=\"otherName\" placeholder=\"your friend's username\" />\n          <textarea id=\"firstMsg\" placeholder=\"type in a message!\" />\n          <button type=\"submit\" id=\"sendFirstMsg\" onClick={() => startConvo(selected, state, updateMessages, changeState)}>Start conversation!</button>\n        </div>\n      );\n    }\n    if (selected === 'audio') {\n      return (\n        <div id=\"form\">\n          <input type=\"text\" id=\"otherName\" placeholder=\"your friend's username\" />\n          <input type=\"file\" id=\"firstMsg\" multiple accept=\"audio/*\" />\n          <button type=\"submit\" id=\"sendFirstMsg\" onClick={() => startConvo(selected, state, updateMessages, changeState)}>Start conversation!</button>\n        </div>\n      );\n    }\n    if (selected === 'video') {\n      return (\n        <div id=\"form\">\n          <input type=\"text\" id=\"otherName\" placeholder=\"your friend's username\" />\n          <input type=\"file\" id=\"firstMsg\" multiple accept=\"video/*\" />\n          <button type=\"submit\" id=\"sendFirstMsg\" onClick={() => startConvo(selected, state, updateMessages, changeState)}>Start conversation!</button>\n        </div>\n      );\n    }\n    if (selected === 'image') {\n      return (\n        <div id=\"form\">\n          <input type=\"text\" id=\"otherName\" placeholder=\"your friend's username\" />\n          <input type=\"file\" id=\"firstMsg\" multiple accept=\"image/*\" />\n          <button type=\"submit\" id=\"sendFirstMsg\" onClick={() => startConvo(selected, state, updateMessages, changeState)}>Start conversation!</button>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n          <div className=\"info-area\">\n            Start a new conversation!\n            <br />\n            {window.location.href.split('/').pop() === 'error' ? 'ERROR sending message: cannot message self.' : null}\n            {window.location.href.split('/').pop() === 'group' ? 'ERROR sending message: cannot message user not in a group with you.' : null}\n            {window.location.href.split('/').pop() === 'user' ? 'ERROR sending message: cannot message to user that does not exist.' : null}\n            {window.location.href.split('/').pop() === 'img' ? 'ERROR sending message: image file too large.' : null}\n            {window.location.href.split('/').pop() === 'av' ? 'ERROR sending message: audio/video file too large.' : null}\n            <div>\n              <label htmlFor=\"textInput\" className=\"list\">\n                <input type=\"radio\" id=\"textInput\" name=\"msgType\" onClick={() => updateSelected('text')} />\n                Text message\n              </label>\n              <label htmlFor=\"audioInput\" className=\"list\">\n                <input type=\"radio\" id=\"audioInput\" name=\"msgType\" onClick={() => updateSelected('audio')} />\n                Audio message\n              </label>\n              <label htmlFor=\"videoInput\" className=\"list\">\n                <input type=\"radio\" id=\"videoInput\" name=\"msgType\" onClick={() => updateSelected('video')} />\n                Video message\n              </label>\n              <label htmlFor=\"imageInput\" className=\"list\">\n                <input type=\"radio\" id=\"imageInput\" name=\"msgType\" onClick={() => updateSelected('image')} />\n                Image message\n              </label>\n            </div>\n            {conditionalRender()}\n          </div>\n\n          <div className=\"convo-area\" id=\"view-convos\">\n            You do not have any messages :(\n          </div>\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Messages;\n","import sendUploadPostRequest from '../UploadModule';\n\nconst database = require('../DatabaseModule');\n\nconst getMessages = async (convoId, user) => {\n  const response = await database.sendGetRequest(`/message/${convoId}/${user}`);\n  return response;\n};\n\nconst parseMessages = (msgs, id) => {\n  // remove all children in the box\n  if (msgs.length !== 0) {\n    const element = document.getElementById('view-msgs');\n\n    if (element) {\n      while (element.firstChild) {\n        element.removeChild(element.firstChild);\n      }\n    }\n  }\n\n  for (let i = 0; i < msgs.length; i += 1) {\n    let msg = `${msgs[i].senderName}`;\n    if (msgs[i].txt !== null) {\n      msg += `<div class=\"content txt\">\n          ${msgs[i].txt}\n        </div>`;\n    } else if (msgs[i].img !== null) {\n      msg += `<div class=\"content txt\">\n          <img src=${msgs[i].img} class=\"image\" alt=\"${msgs[i].senderName}'s image\" />\n        </div>`;\n    } else if (msgs[i].audio !== null) {\n      msg += `<div class=\"content txt\">\n          <audio controls>\n            <source src=${msgs[i].audio}>\n          </audio>\n        </div>`;\n    } else if (msgs[i].video !== null) {\n      msg += `<div class=\"content txt\">\n          <video src=${msgs[i].video} controls>\n            Something went wrong!\n          </video>\n        </div>`;\n    }\n    if (id === msgs[i].fromId) {\n      const isDeliveredDateFormat = `${new Date(Date.parse(msgs[i].isDelivered)).getMonth()}-${new Date(Date.parse(msgs[i].isDelivered)).getDate()}-${new Date(Date.parse(msgs[i].isDelivered)).getFullYear()} at ${new Date(Date.parse(msgs[i].isDelivered)).getHours()}:${new Date(Date.parse(msgs[i].isDelivered)).getMinutes() < 10 ? `0${new Date(Date.parse(msgs[i].isDelivered)).getMinutes()}` : new Date(Date.parse(msgs[i].isDelivered)).getMinutes()}`;\n      const isReadDateFormat = `${new Date(Date.parse(msgs[i].isRead)).getMonth()}-${new Date(Date.parse(msgs[i].isRead)).getDate()}-${new Date(Date.parse(msgs[i].isRead)).getFullYear()} at ${new Date(Date.parse(msgs[i].isRead)).getHours()}:${new Date(Date.parse(msgs[i].isRead)).getMinutes() < 10 ? `0${new Date(Date.parse(msgs[i].isRead)).getMinutes()}` : new Date(Date.parse(msgs[i].isRead)).getMinutes()}`;\n      msg += `${msgs[i].isRead === null ? `Delivered ${isDeliveredDateFormat}` : `Read ${isReadDateFormat}`}`;\n    }\n\n    const div = document.createElement('div');\n    div.className = 'msg';\n    div.id = (id === msgs[i].fromId ? 'i-sent' : 'they-sent');\n    div.innerHTML = msg;\n    document.getElementById('view-msgs').appendChild(div);\n  }\n};\n\nconst uploadMediaConvo = async (selected, state, updateMessages, updateState) => {\n  const file = document.getElementById('firstMsg').files[0];\n\n  // check if the file is too large (defined as > 10MB)\n  if (selected === 'image' && file.size > 10000000) {\n    updateState({ link: '/conversation/img' });\n    return null;\n  }\n  if ((selected === 'audio' || selected === 'video') && file.size > 100000000) {\n    updateState({ link: '/conversation/av' });\n    return null;\n  }\n\n  const data = new FormData();\n  data.append('file', file);\n  data.append('upload_preset', ['yj7lgb8v']);\n  sendUploadPostRequest(`https://api.cloudinary.com/v1_1/cis557-project-group-18/${selected === 'image' ? 'image' : 'video'}/upload`, data).then((mediaUrl) => {\n    // creates conversation in database\n\n    const msg = {\n      toId: state.viewingConvo.otherUserId,\n      fromId: state.userId,\n      senderName: state.username,\n    };\n\n    if (selected === 'image') {\n      msg.img = mediaUrl.data.url;\n    } else if (selected === 'video') {\n      msg.video = mediaUrl.data.url;\n    } else {\n      msg.audio = mediaUrl.data.url;\n    }\n\n    return database.sendPostRequest(`/message/${selected}/${state.viewingConvo.otherUserId}`, { msg })\n      .then((response) => {\n        updateMessages().then(() => response);\n      });\n  });\n\n  return null;\n};\n\nconst sendMessage = async (updateConvo, selected, state, updateState) => {\n  if (selected === 'audio') {\n    return uploadMediaConvo(selected, state, updateConvo, updateState);\n  }\n  if (selected === 'video') {\n    return uploadMediaConvo(selected, state, updateConvo, updateState);\n  }\n  if (selected === 'image') {\n    return uploadMediaConvo(selected, state, updateConvo, updateState);\n  }\n\n  const msg = {\n    toId: state.viewingConvo.otherUserId,\n    fromId: state.userId,\n    senderName: state.username,\n  };\n\n  const txt = document.getElementById('firstMsg').value;\n  msg.txt = txt;\n  const response = await database.sendPostRequest(`/message/text/${state.viewingConvo.otherUserId}`, { msg });\n\n  await updateConvo();\n\n  return response;\n};\n\nexport {\n  getMessages,\n  parseMessages,\n  sendMessage,\n};\n","import { useState, useEffect, React } from 'react';\nimport { getMessages, parseMessages, sendMessage } from './ConversationModule';\nimport './Conversation.css';\n\nfunction Conversation(props) {\n  const { changeState, state } = props;\n  // eslint-disable-next-line\n  const [selected, updateSelected] = useState('text');\n\n  // eslint-disable-next-line\n  const [message, setMessage] = useState([]);\n\n  const updateState = async () => {\n    const msgs = await getMessages(state.viewingConvo.id, state.userId);\n\n    setMessage(msgs);\n    parseMessages(msgs, state.userId);\n    document.getElementById('view-msgs').scrollTop = document.getElementById('view-msgs').scrollHeight;\n  };\n\n  const conditionalRender = () => {\n    if (selected === 'text') {\n      return (\n        <textarea id=\"firstMsg\" placeholder=\"type in a message!\" />\n      );\n    }\n    if (selected === 'audio') {\n      return (\n        <input type=\"file\" id=\"firstMsg\" multiple accept=\"audio/*\" />\n      );\n    }\n    if (selected === 'video') {\n      return (\n        <input type=\"file\" id=\"firstMsg\" multiple accept=\"video/*\" />\n      );\n    }\n    if (selected === 'image') {\n      return (\n        <input type=\"file\" id=\"firstMsg\" multiple accept=\"image/*\" />\n      );\n    }\n    return null;\n  };\n\n  useEffect(() => { updateState(); }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n          <div id=\"view-msgs\">\n            You do not have any messages! Send a message.\n          </div>\n          <div id=\"send-msg\">\n            {window.location.href.split('/').pop() === 'img' ? 'ERROR sending message: image file too large' : null}\n            {window.location.href.split('/').pop() === 'av' ? 'ERROR sending message: audio/video file size too large' : null}\n            <div id=\"options\">\n              <label htmlFor=\"textInput\" className=\"list\">\n                <input type=\"radio\" id=\"textInput\" name=\"msgType\" onClick={() => updateSelected('text')} />\n                Text message\n              </label>\n              <label htmlFor=\"audioInput\" className=\"list\">\n                <input type=\"radio\" id=\"audioInput\" name=\"msgType\" onClick={() => updateSelected('audio')} />\n                Audio message\n              </label>\n              <label htmlFor=\"videoInput\" className=\"list\">\n                <input type=\"radio\" id=\"videoInput\" name=\"msgType\" onClick={() => updateSelected('video')} />\n                Video message\n              </label>\n              <label htmlFor=\"imageInput\" className=\"list\">\n                <input type=\"radio\" id=\"imageInput\" name=\"msgType\" onClick={() => updateSelected('image')} />\n                Image message\n              </label>\n            </div>\n            { conditionalRender() }\n            <button type=\"submit\" id=\"sendMsgButton\" onClick={() => sendMessage(updateState, selected, state, changeState)}>Send</button>\n          </div>\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Conversation;\n","import { useState, useEffect, React } from 'react';\nimport './AnalyticsPage.css';\n\nconst lib = require('./AnalyticsModule');\n\nconst updateFacts = async (setGroupFacts, setPostFacts) => {\n  const newGroupFacts = await lib.getGroupAnalyticsFacts();\n  setGroupFacts(newGroupFacts);\n\n  const newPostFacts = await lib.getPostAnalyticsFacts();\n  setPostFacts(newPostFacts);\n};\n\nfunction AnalyticsPage(props) {\n  const { changeState, state } = props;\n  const [groupFacts, setGroupFacts] = useState([]);\n  const [postFacts, setPostFacts] = useState([]);\n\n  useEffect(() => {\n    updateFacts(setGroupFacts, setPostFacts);\n  }, []);\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n          <div>\n            Super advanced group analytics:\n          </div>\n          {groupFacts.map((fact) => (\n            <div key={fact[0]}>\n              {`${fact[0]}: ${fact[1]}`}\n            </div>\n          ))}\n          <p />\n          <div>\n            Equally advanced post analytics:\n          </div>\n          {postFacts.map((fact) => (\n            <div key={fact[0]}>\n              {`${fact[0]}: ${fact[1]}`}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default AnalyticsPage;\n","import { React, useEffect } from 'react';\nimport './FlaggedPosts.css';\n\nconst lib = require('./FlaggedPostsModule');\n\nfunction FlaggedPosts(props) {\n  const { changeState, state } = props;\n\n  const update = async () => {\n    const flagged = await lib.getFlaggedPostsForReview(state);\n    lib.parseFlaggedPosts(flagged, changeState);\n  };\n  useEffect(() => { update(); }, [state]);\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"header\">\n        <div className=\"social-media-title\">Social Media</div>\n        <div className=\"profile-picture\">\n          <div className=\"img\" />\n        </div>\n        <div className=\"username\">{`Hi, ${state.username}!`}</div>\n      </div>\n\n      <div className=\"top-navbar\">\n        <div className=\"home-link\" onClick={() => changeState({ link: '/main' })} onKeyDown={() => changeState({ link: '/main' })} role=\"link\" tabIndex={0}>Home</div>\n        <div className=\"profile-link\" onClick={() => changeState({ link: '/profile' })} onKeyDown={() => changeState({ link: '/profile' })} role=\"link\" tabIndex={0}>Profile</div>\n      </div>\n\n      <div className=\"main-container\">\n\n        <div className=\"side-navbar\">\n          <button type=\"submit\" className=\"notifications\" onClick={() => changeState({ link: '/notifications' })}>Notifications</button>\n          <button type=\"submit\" className=\"events\" onClick={() => changeState({ link: '/analytics' })}>Analytics</button>\n          <button type=\"submit\" className=\"groups\" onClick={() => changeState({ link: '/groups' })}>Groups</button>\n          <button type=\"submit\" className=\"invitations\" onClick={() => changeState({ link: '/invitations' })}>Group Invitations and Requests </button>\n          <button type=\"submit\" className=\"photos\" onClick={() => changeState({ link: '/flaggedposts' })}>Flagged posts</button>\n        </div>\n\n        <div className=\"main-area\">\n\n          <div className=\"post-flag-area\" id=\"post-create-area\">\n            No posts have been flagged! You are off the hook :D\n          </div>\n        </div>\n\n        <div className=\"side-navbar\" id=\"forMessages\">\n          <button type=\"submit\" className=\"messages\" onClick={() => changeState({ link: '/messages' })}>Messages</button>\n          <button type=\"submit\" className=\"logout\" onClick={() => changeState({ link: '/' })}>Log out</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default FlaggedPosts;\n","import React, { useState } from 'react';\nimport LoginPage from './login-page/LoginPage';\nimport Home from './home-page/Home';\nimport ProfilePage from './profile-page/ProfilePage';\nimport Groups from './groups-page/Groups';\nimport NotificationPage from './notifications-page/NotificationPage';\nimport UpdatePassword from './profile-page/UpdatePassword';\nimport ViewGroup from './view-group-page/ViewGroup';\nimport InvitationPage from './invitations-page/InvitationPage';\nimport DeactivateAccountPage from './profile-page/deactivate-account-page/DeactivateAccountPage';\nimport Messages from './messages-page/Messages';\nimport Conversation from './conversation-page/Conversation';\nimport AnalyticsPage from './analytics-page/AnalyticsPage';\nimport FlaggedPosts from './flagged-posts/FlaggedPosts';\n\nfunction MainPage() {\n  const [state, updateState] = useState(\n    {\n      link: '/',\n      userId: -1,\n      username: '',\n      viewingGroup: -1,\n      viewingConvo: { id: -1, otherUserId: -1 },\n    },\n  );\n\n  const changeState = (input) => {\n    if (typeof input.link !== 'undefined') window.history.pushState(null, '', input.link);\n    updateState((oldState) => ({\n      link: ((typeof input.link !== 'undefined') ? input.link : oldState.link),\n      userId: ((typeof input.userId !== 'undefined') ? input.userId : oldState.userId),\n      username: ((typeof input.username !== 'undefined') ? input.username : oldState.username),\n      viewingGroup: ((typeof input.viewingGroup !== 'undefined') ? input.viewingGroup : oldState.viewingGroup),\n      viewingConvo: ((typeof input.viewingConvo !== 'undefined') ? input.viewingConvo : oldState.viewingConvo),\n    }));\n  };\n\n  const conditionallyRender = (url) => {\n    if (url.includes('/profile')) {\n      return (<ProfilePage changeState={changeState} state={state} />);\n    }\n    if (url.includes('/home') || url.includes('/main')) {\n      return (<Home changeState={changeState} state={state} />);\n    }\n    if (url.includes('/groups')) {\n      return (<Groups changeState={changeState} state={state} />);\n    }\n    if (url.includes('/notifications')) {\n      return (<NotificationPage changeState={changeState} state={state} />);\n    }\n    if (url.includes('/messages') || url.includes('/messages/error') || url.includes('/messages/group') || url.includes('/messages/user') || url.includes('/messages/img') || url.includes('/messages/av')) {\n      return (<Messages changeState={changeState} state={state} />);\n    }\n    if (url.includes('/conversation') || url.includes('/conversation/img') || url.includes('/conversation/av')) {\n      return (<Conversation changeState={changeState} state={state} />);\n    }\n    if (url.includes('/changepassword')) {\n      return (<UpdatePassword changeState={changeState} state={state} userId={state.userId} />);\n    }\n    if (url.includes('/viewgroup') || url.includes('/viewgroup/error') || url.includes('/viewgroup/post/error') || url.includes('/viewgroup/admin')) {\n      return (<ViewGroup changeState={changeState} state={state} />);\n    }\n    if (url.includes('/invitations')) {\n      return (<InvitationPage changeState={changeState} state={state} />);\n    }\n    if (url.includes('/deactivate-account')) {\n      return (<DeactivateAccountPage changeState={changeState} state={state} />);\n    }\n    if (url.includes('/flaggedposts')) {\n      return (<FlaggedPosts changeState={changeState} state={state} />);\n    }\n    if (url.includes('/analytics')) {\n      return (<AnalyticsPage changeState={changeState} state={state} />);\n    }\n    const last = url.split('/').pop();\n    const first = url.split('/')[3];\n    if (url.includes('/loginchangepassword') || url.includes('/registration') || last === '' || url.includes('/registration/error') || first === 'error' || first === 'locked') {\n      return (<LoginPage changeState={changeState} state={state} />);\n    }\n    // TODO: change this to something meaningful\n    // will become a page that's like Oh this is not available!\n    return state;\n  };\n\n  return (\n    conditionallyRender(window.location.href)\n  );\n}\n\nexport default MainPage;\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport MainPage from './MainPage';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainPage />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const { createHash } = require('crypto');\r\nconst database = require('../DatabaseModule');\r\nconst lib = require('../registration-page/RegistrationModule');\r\n\r\nconst verifyUser = async (changeState, username, password, addAttempt, attempt) => {\r\n  const newUser = {\r\n    user_name: username,\r\n    user_password: createHash('sha256').update(password).digest('hex'),\r\n    attempt,\r\n  };\r\n\r\n  const user = await database.sendPostRequest('/login', newUser);\r\n  if (user.err === undefined) {\r\n    // TODO: will eventually have to send the profile to the MainPage state (from response)\r\n    changeState({ link: '/main', userId: user.profile[0].user_id, username: newUser.user_name });\r\n    // eslint-disable-next-line no-console\r\n    console.log(`userid is: ${user.profile[0].user_id}`);\r\n  } else if (user.err.includes('locked') || user.err.includes('jail')) {\r\n    changeState({ link: '/locked' });\r\n  } else {\r\n    addAttempt(attempt + 1);\r\n    changeState({ link: '/error' });\r\n  }\r\n};\r\n\r\nconst changePassword = async (changeState, username, password1, password2) => {\r\n  if (lib.validatePassword(changeState, password1, password2, '/loginchangepassword/invalid')) {\r\n    const toUserId = await database.sendGetRequest(`/user-by-name/${username}`);\r\n    if (toUserId.length === 0) {\r\n      changeState({ link: '/loginchangepassword/user' });\r\n      return;\r\n    }\r\n\r\n    await database.sendPutRequest(`/user/${toUserId[0].user_id}`, { user_password: createHash('sha256').update(password1).digest('hex') });\r\n\r\n    changeState({ link: '/' });\r\n  }\r\n};\r\n\r\nexport { verifyUser, changePassword };\r\n"],"sourceRoot":""}